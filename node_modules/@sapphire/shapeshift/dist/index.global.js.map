{"version":3,"sources":["../node_modules/fast-deep-equal/es6/index.js","../node_modules/lodash.uniqwith/index.js","../src/index.ts","../src/lib/configs.ts","../src/lib/Result.ts","../src/validators/util/getValue.ts","../src/validators/BaseValidator.ts","node-modules-polyfills:process","../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js","node-modules-polyfills:util","../src/lib/errors/BaseError.ts","../src/lib/errors/BaseConstraintError.ts","../src/lib/errors/ExpectedConstraintError.ts","../src/constraints/util/isUnique.ts","../src/constraints/util/operators.ts","../src/constraints/ArrayConstraints.ts","../src/lib/errors/CombinedPropertyError.ts","../src/lib/errors/ValidationError.ts","../src/validators/ArrayValidator.ts","../src/constraints/BigIntConstraints.ts","../src/validators/BigIntValidator.ts","../src/constraints/BooleanConstraints.ts","../src/validators/BooleanValidator.ts","../src/constraints/DateConstraints.ts","../src/validators/DateValidator.ts","../src/lib/errors/ExpectedValidationError.ts","../src/validators/InstanceValidator.ts","../src/validators/LiteralValidator.ts","../src/validators/NeverValidator.ts","../src/validators/NullishValidator.ts","../src/constraints/NumberConstraints.ts","../src/validators/NumberValidator.ts","../src/lib/errors/MissingPropertyError.ts","../src/lib/errors/UnknownPropertyError.ts","../src/validators/DefaultValidator.ts","../src/lib/errors/CombinedError.ts","../src/validators/UnionValidator.ts","../src/validators/ObjectValidator.ts","../src/validators/PassthroughValidator.ts","../src/validators/RecordValidator.ts","../src/validators/SetValidator.ts","../src/constraints/util/emailValidator.ts","../src/constraints/util/net.ts","../src/lib/errors/MultiplePossibilitiesConstraintError.ts","../src/constraints/util/common/combinedResultFn.ts","../src/constraints/util/urlValidators.ts","../src/constraints/StringConstraints.ts","../src/validators/StringValidator.ts","../src/validators/TupleValidator.ts","../src/validators/MapValidator.ts","../src/validators/LazyValidator.ts","../src/lib/errors/UnknownEnumValueError.ts","../src/validators/NativeEnumValidator.ts","../src/constraints/TypedArrayLengthConstraints.ts","../src/constraints/util/common/vowels.ts","../src/constraints/util/typedArray.ts","../src/validators/TypedArrayValidator.ts","../src/lib/Shapes.ts"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array ? array.length : 0;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\n/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * Checks if a cache value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    Set = getNative(root, 'Set'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The comparator is invoked with\n * two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  return (array && array.length)\n    ? baseUniq(array, undefined, comparator)\n    : [];\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = uniqWith;\n","import { Shapes } from './lib/Shapes';\n\nexport const s = new Shapes();\n\nexport * from './lib/configs';\nexport * from './lib/errors/BaseError';\nexport * from './lib/errors/CombinedError';\nexport * from './lib/errors/CombinedPropertyError';\nexport * from './lib/errors/ExpectedConstraintError';\nexport * from './lib/errors/ExpectedValidationError';\nexport * from './lib/errors/MissingPropertyError';\nexport * from './lib/errors/MultiplePossibilitiesConstraintError';\nexport * from './lib/errors/UnknownEnumValueError';\nexport * from './lib/errors/UnknownPropertyError';\nexport * from './lib/errors/ValidationError';\nexport * from './lib/Result';\nexport * from './type-exports';\n","let validationEnabled = true;\n\n/**\n * Sets whether validators should run on the input, or if the input should be passed through.\n * @param enabled Whether validation should be done on inputs\n */\nexport function setGlobalValidationEnabled(enabled: boolean) {\n\tvalidationEnabled = enabled;\n}\n\n/**\n * @returns Whether validation is enabled\n */\nexport function getGlobalValidationEnabled() {\n\treturn validationEnabled;\n}\n","export class Result<T, E extends Error = Error> {\n\tpublic readonly success: boolean;\n\tpublic readonly value?: T;\n\tpublic readonly error?: E;\n\n\tprivate constructor(success: boolean, value?: T, error?: E) {\n\t\tthis.success = success;\n\t\tif (success) {\n\t\t\tthis.value = value;\n\t\t} else {\n\t\t\tthis.error = error;\n\t\t}\n\t}\n\n\tpublic isOk(): this is { success: true; value: T } {\n\t\treturn this.success;\n\t}\n\n\tpublic isErr(): this is { success: false; error: E } {\n\t\treturn !this.success;\n\t}\n\n\tpublic unwrap(): T {\n\t\tif (this.isOk()) return this.value;\n\t\tthrow this.error as Error;\n\t}\n\n\tpublic static ok<T, E extends Error = Error>(value: T): Result<T, E> {\n\t\treturn new Result<T, E>(true, value);\n\t}\n\n\tpublic static err<T, E extends Error = Error>(error: E): Result<T, E> {\n\t\treturn new Result<T, E>(false, undefined, error);\n\t}\n}\n","// https://github.com/microsoft/TypeScript/issues/37663\ntype Fn = (...args: unknown[]) => unknown;\n\nexport function getValue<T, U = T extends Fn ? ReturnType<T> : T>(valueOrFn: T): U {\n\treturn typeof valueOrFn === 'function' ? valueOrFn() : valueOrFn;\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport { getGlobalValidationEnabled } from '../lib/configs';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport type { CombinedError } from '../lib/errors/CombinedError';\nimport type { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport type { UnknownEnumValueError } from '../lib/errors/UnknownEnumValueError';\nimport type { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { BaseConstraintError, InferResultType } from '../type-exports';\nimport { ArrayValidator, DefaultValidator, LiteralValidator, NullishValidator, SetValidator, UnionValidator } from './imports';\nimport { getValue } from './util/getValue';\n\nexport abstract class BaseValidator<T> {\n\tprotected constraints: readonly IConstraint<T>[] = [];\n\tprotected isValidationEnabled: boolean | (() => boolean) | null = null;\n\n\tpublic constructor(constraints: readonly IConstraint<T>[] = []) {\n\t\tthis.constraints = constraints;\n\t}\n\n\tpublic get optional(): UnionValidator<T | undefined> {\n\t\treturn new UnionValidator([new LiteralValidator(undefined), this.clone()]);\n\t}\n\n\tpublic get nullable(): UnionValidator<T | null> {\n\t\treturn new UnionValidator([new LiteralValidator(null), this.clone()]);\n\t}\n\n\tpublic get nullish(): UnionValidator<T | null | undefined> {\n\t\treturn new UnionValidator([new NullishValidator(), this.clone()]);\n\t}\n\n\tpublic get array(): ArrayValidator<T[]> {\n\t\treturn new ArrayValidator<T[]>(this.clone());\n\t}\n\n\tpublic get set(): SetValidator<T> {\n\t\treturn new SetValidator<T>(this.clone());\n\t}\n\n\tpublic or<O>(...predicates: readonly BaseValidator<O>[]): UnionValidator<T | O> {\n\t\treturn new UnionValidator<T | O>([this.clone(), ...predicates]);\n\t}\n\n\tpublic transform(cb: (value: T) => T): this;\n\tpublic transform<O>(cb: (value: T) => O): BaseValidator<O>;\n\tpublic transform<O>(cb: (value: T) => O): BaseValidator<O> {\n\t\treturn this.addConstraint({ run: (input) => Result.ok(cb(input) as unknown as T) }) as unknown as BaseValidator<O>;\n\t}\n\n\tpublic reshape(cb: (input: T) => Result<T>): this;\n\tpublic reshape<R extends Result<unknown>, O = InferResultType<R>>(cb: (input: T) => R): BaseValidator<O>;\n\tpublic reshape<R extends Result<unknown>, O = InferResultType<R>>(cb: (input: T) => R): BaseValidator<O> {\n\t\treturn this.addConstraint({ run: cb as unknown as (input: T) => Result<T, BaseConstraintError<T>> }) as unknown as BaseValidator<O>;\n\t}\n\n\tpublic default(value: Exclude<T, undefined> | (() => Exclude<T, undefined>)): DefaultValidator<Exclude<T, undefined>> {\n\t\treturn new DefaultValidator(this.clone() as unknown as BaseValidator<Exclude<T, undefined>>, value);\n\t}\n\n\tpublic run(value: unknown): Result<T, BaseError> {\n\t\tlet result = this.handle(value) as Result<T, BaseError>;\n\t\tif (result.isErr()) return result;\n\n\t\tfor (const constraint of this.constraints) {\n\t\t\tresult = constraint.run(result.value as T);\n\t\t\tif (result.isErr()) break;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic parse<R extends T = T>(value: unknown): R {\n\t\t// If validation is disabled (at the validator or global level), we only run the `handle` method, which will do some basic checks\n\t\t// (like that the input is a string for a string validator)\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn this.handle(value).unwrap() as R;\n\t\t}\n\n\t\treturn this.constraints.reduce((v, constraint) => constraint.run(v).unwrap(), this.handle(value).unwrap()) as R;\n\t}\n\n\t/**\n\t * Sets if the validator should also run constraints or just do basic checks.\n\t * @param isValidationEnabled Whether this validator should be enabled or disabled. You can pass boolean or a function returning boolean which will be called just before parsing.\n\t * Set to `null` to go off of the global configuration.\n\t */\n\tpublic setValidationEnabled(isValidationEnabled: boolean | (() => boolean) | null): this {\n\t\tconst clone = this.clone();\n\t\tclone.isValidationEnabled = isValidationEnabled;\n\t\treturn clone;\n\t}\n\n\tpublic getValidationEnabled() {\n\t\treturn getValue(this.isValidationEnabled);\n\t}\n\n\tprotected get shouldRunConstraints(): boolean {\n\t\treturn getValue(this.isValidationEnabled) ?? getGlobalValidationEnabled();\n\t}\n\n\tprotected clone(): this {\n\t\tconst clone: this = Reflect.construct(this.constructor, [this.constraints]);\n\t\tclone.isValidationEnabled = this.isValidationEnabled;\n\t\treturn clone;\n\t}\n\n\tprotected abstract handle(value: unknown): Result<T, ValidatorError>;\n\n\tprotected addConstraint(constraint: IConstraint<T>): this {\n\t\tconst clone = this.clone();\n\t\tclone.constraints = clone.constraints.concat(constraint);\n\t\treturn clone;\n\t}\n}\n\nexport type ValidatorError = ValidationError | CombinedError | CombinedPropertyError | UnknownEnumValueError;\n","// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nexport default browser$1;\nexport { addListener, argv, binding, browser, chdir, config, cwd, emit, env, hrtime, nextTick, off, on, once, platform, release, removeAllListeners, removeListener, title, umask, uptime, version, versions };\n","\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n","import type { InspectOptionsStylized } from 'node:util';\n\nexport const customInspectSymbol = Symbol.for('nodejs.util.inspect.custom');\nexport const customInspectSymbolStackLess = Symbol.for('nodejs.util.inspect.custom.stack-less');\n\nexport abstract class BaseError extends Error {\n\tprotected [customInspectSymbol](depth: number, options: InspectOptionsStylized) {\n\t\treturn `${this[customInspectSymbolStackLess](depth, options)}\\n${this.stack!.slice(this.stack!.indexOf('\\n'))}`;\n\t}\n\n\tprotected abstract [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string;\n}\n","import type {\n\tArrayConstraintName,\n\tBigIntConstraintName,\n\tBooleanConstraintName,\n\tDateConstraintName,\n\tNumberConstraintName,\n\tStringConstraintName,\n\tTypedArrayConstraintName\n} from '../../constraints/type-exports';\nimport { BaseError } from './BaseError';\n\nexport type ConstraintErrorNames =\n\t| TypedArrayConstraintName\n\t| ArrayConstraintName\n\t| BigIntConstraintName\n\t| BooleanConstraintName\n\t| DateConstraintName\n\t| NumberConstraintName\n\t| StringConstraintName;\n\nexport abstract class BaseConstraintError<T = unknown> extends BaseError {\n\tpublic readonly constraint: ConstraintErrorNames;\n\tpublic readonly given: T;\n\n\tpublic constructor(constraint: ConstraintErrorNames, message: string, given: T) {\n\t\tsuper(message);\n\t\tthis.constraint = constraint;\n\t\tthis.given = given;\n\t}\n}\n","import { inspect, type InspectOptionsStylized } from 'node:util';\nimport { customInspectSymbolStackLess } from './BaseError';\nimport { BaseConstraintError, type ConstraintErrorNames } from './BaseConstraintError';\n\nexport class ExpectedConstraintError<T = unknown> extends BaseConstraintError<T> {\n\tpublic readonly expected: string;\n\n\tpublic constructor(constraint: ConstraintErrorNames, message: string, given: T, expected: string) {\n\t\tsuper(constraint, message, given);\n\t\tthis.expected = expected;\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tconstraint: this.constraint,\n\t\t\tgiven: this.given,\n\t\t\texpected: this.expected\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst constraint = options.stylize(this.constraint, 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[ExpectedConstraintError: ${constraint}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1 };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst given = inspect(this.given, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('ExpectedConstraintError', 'special')} > ${constraint}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst expectedBlock = `\\n  ${options.stylize('Expected: ', 'string')}${options.stylize(this.expected, 'boolean')}`;\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${expectedBlock}\\n${givenBlock}`;\n\t}\n}\n","import fastDeepEqual from 'fast-deep-equal/es6/index.js';\nimport uniqWith from 'lodash.uniqwith';\n\nexport function isUnique(input: unknown[]) {\n\tif (input.length < 2) return true;\n\tconst uniqueArray = uniqWith(input, fastDeepEqual);\n\treturn uniqueArray.length === input.length;\n}\n","export function lessThan(a: number, b: number): boolean;\nexport function lessThan(a: bigint, b: bigint): boolean;\nexport function lessThan(a: number | bigint, b: number | bigint): boolean {\n\treturn a < b;\n}\n\nexport function lessThanOrEqual(a: number, b: number): boolean;\nexport function lessThanOrEqual(a: bigint, b: bigint): boolean;\nexport function lessThanOrEqual(a: number | bigint, b: number | bigint): boolean {\n\treturn a <= b;\n}\n\nexport function greaterThan(a: number, b: number): boolean;\nexport function greaterThan(a: bigint, b: bigint): boolean;\nexport function greaterThan(a: number | bigint, b: number | bigint): boolean {\n\treturn a > b;\n}\n\nexport function greaterThanOrEqual(a: number, b: number): boolean;\nexport function greaterThanOrEqual(a: bigint, b: bigint): boolean;\nexport function greaterThanOrEqual(a: number | bigint, b: number | bigint): boolean {\n\treturn a >= b;\n}\n\nexport function equal(a: number, b: number): boolean;\nexport function equal(a: bigint, b: bigint): boolean;\nexport function equal(a: number | bigint, b: number | bigint): boolean {\n\treturn a === b;\n}\n\nexport function notEqual(a: number, b: number): boolean;\nexport function notEqual(a: bigint, b: bigint): boolean;\nexport function notEqual(a: number | bigint, b: number | bigint): boolean {\n\treturn a !== b;\n}\n\nexport interface Comparator {\n\t(a: number, b: number): boolean;\n\t(a: bigint, b: bigint): boolean;\n}\n","import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { IConstraint } from './base/IConstraint';\nimport { isUnique } from './util/isUnique';\nimport { Comparator, equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual } from './util/operators';\n\nexport type ArrayConstraintName = `s.array(T).${\n\t| 'unique'\n\t| `length${\n\t\t\t| 'LessThan'\n\t\t\t| 'LessThanOrEqual'\n\t\t\t| 'GreaterThan'\n\t\t\t| 'GreaterThanOrEqual'\n\t\t\t| 'Equal'\n\t\t\t| 'NotEqual'\n\t\t\t| 'Range'\n\t\t\t| 'RangeInclusive'\n\t\t\t| 'RangeExclusive'}`}`;\n\nfunction arrayLengthComparator<T>(comparator: Comparator, name: ArrayConstraintName, expected: string, length: number): IConstraint<T[]> {\n\treturn {\n\t\trun(input: T[]) {\n\t\t\treturn comparator(input.length, length) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, 'Invalid Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport function arrayLengthLessThan<T>(value: number): IConstraint<T[]> {\n\tconst expected = `expected.length < ${value}`;\n\treturn arrayLengthComparator(lessThan, 's.array(T).lengthLessThan', expected, value);\n}\n\nexport function arrayLengthLessThanOrEqual<T>(value: number): IConstraint<T[]> {\n\tconst expected = `expected.length <= ${value}`;\n\treturn arrayLengthComparator(lessThanOrEqual, 's.array(T).lengthLessThanOrEqual', expected, value);\n}\n\nexport function arrayLengthGreaterThan<T>(value: number): IConstraint<T[]> {\n\tconst expected = `expected.length > ${value}`;\n\treturn arrayLengthComparator(greaterThan, 's.array(T).lengthGreaterThan', expected, value);\n}\n\nexport function arrayLengthGreaterThanOrEqual<T>(value: number): IConstraint<T[]> {\n\tconst expected = `expected.length >= ${value}`;\n\treturn arrayLengthComparator(greaterThanOrEqual, 's.array(T).lengthGreaterThanOrEqual', expected, value);\n}\n\nexport function arrayLengthEqual<T>(value: number): IConstraint<T[]> {\n\tconst expected = `expected.length === ${value}`;\n\treturn arrayLengthComparator(equal, 's.array(T).lengthEqual', expected, value);\n}\n\nexport function arrayLengthNotEqual<T>(value: number): IConstraint<T[]> {\n\tconst expected = `expected.length !== ${value}`;\n\treturn arrayLengthComparator(notEqual, 's.array(T).lengthNotEqual', expected, value);\n}\n\nexport function arrayLengthRange<T>(start: number, endBefore: number): IConstraint<T[]> {\n\tconst expected = `expected.length >= ${start} && expected.length < ${endBefore}`;\n\treturn {\n\t\trun(input: T[]) {\n\t\t\treturn input.length >= start && input.length < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.array(T).lengthRange', 'Invalid Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport function arrayLengthRangeInclusive<T>(start: number, end: number): IConstraint<T[]> {\n\tconst expected = `expected.length >= ${start} && expected.length <= ${end}`;\n\treturn {\n\t\trun(input: T[]) {\n\t\t\treturn input.length >= start && input.length <= end //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.array(T).lengthRangeInclusive', 'Invalid Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport function arrayLengthRangeExclusive<T>(startAfter: number, endBefore: number): IConstraint<T[]> {\n\tconst expected = `expected.length > ${startAfter} && expected.length < ${endBefore}`;\n\treturn {\n\t\trun(input: T[]) {\n\t\t\treturn input.length > startAfter && input.length < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.array(T).lengthRangeExclusive', 'Invalid Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport const uniqueArray: IConstraint<unknown[]> = {\n\trun(input: unknown[]) {\n\t\treturn isUnique(input) //\n\t\t\t? Result.ok(input)\n\t\t\t: Result.err(new ExpectedConstraintError('s.array(T).unique', 'Array values are not unique', input, 'Expected all values to be unique'));\n\t}\n};\n","import type { InspectOptionsStylized } from 'node:util';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\n\nexport class CombinedPropertyError extends BaseError {\n\tpublic readonly errors: [PropertyKey, BaseError][];\n\n\tpublic constructor(errors: [PropertyKey, BaseError][]) {\n\t\tsuper('Received one or more errors');\n\n\t\tthis.errors = errors;\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize('[CombinedPropertyError]', 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1, compact: true };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\n\t\tconst header = `${options.stylize('CombinedPropertyError', 'special')} (${options.stylize(this.errors.length.toString(), 'number')})`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst errors = this.errors\n\t\t\t.map(([key, error]) => {\n\t\t\t\tconst property = CombinedPropertyError.formatProperty(key, options);\n\t\t\t\tconst body = error[customInspectSymbolStackLess](depth - 1, newOptions).replace(/\\n/g, padding);\n\n\t\t\t\treturn `  input${property}${padding}${body}`;\n\t\t\t})\n\t\t\t.join('\\n\\n');\n\t\treturn `${header}\\n  ${message}\\n\\n${errors}`;\n\t}\n\n\tprivate static formatProperty(key: PropertyKey, options: InspectOptionsStylized): string {\n\t\tif (typeof key === 'string') return options.stylize(`.${key}`, 'symbol');\n\t\tif (typeof key === 'number') return `[${options.stylize(key.toString(), 'number')}]`;\n\t\treturn `[${options.stylize('Symbol', 'symbol')}(${key.description})]`;\n\t}\n}\n","import { inspect, type InspectOptionsStylized } from 'node:util';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\n\nexport class ValidationError extends BaseError {\n\tpublic readonly validator: string;\n\tpublic readonly given: unknown;\n\n\tpublic constructor(validator: string, message: string, given: unknown) {\n\t\tsuper(message);\n\n\t\tthis.validator = validator;\n\t\tthis.given = given;\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tvalidator: this.validator,\n\t\t\tgiven: this.given\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst validator = options.stylize(this.validator, 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[ValidationError: ${validator}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1, compact: true };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst given = inspect(this.given, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('ValidationError', 'special')} > ${validator}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${givenBlock}`;\n\t}\n}\n","import {\n\tarrayLengthEqual,\n\tarrayLengthGreaterThan,\n\tarrayLengthGreaterThanOrEqual,\n\tarrayLengthLessThan,\n\tarrayLengthLessThanOrEqual,\n\tarrayLengthNotEqual,\n\tarrayLengthRange,\n\tarrayLengthRangeExclusive,\n\tarrayLengthRangeInclusive,\n\tuniqueArray\n} from '../constraints/ArrayConstraints';\nimport type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ExpandSmallerTuples, Tuple, UnshiftTuple } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class ArrayValidator<T extends unknown[], I = T[number]> extends BaseValidator<T> {\n\tprivate readonly validator: BaseValidator<I>;\n\n\tpublic constructor(validator: BaseValidator<I>, constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.validator = validator;\n\t}\n\n\tpublic lengthLessThan<N extends number>(length: N): ArrayValidator<ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, N>]>>> {\n\t\treturn this.addConstraint(arrayLengthLessThan(length) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthLessThanOrEqual<N extends number>(length: N): ArrayValidator<ExpandSmallerTuples<[...Tuple<I, N>]>> {\n\t\treturn this.addConstraint(arrayLengthLessThanOrEqual(length) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthGreaterThan<N extends number>(length: N): ArrayValidator<[...Tuple<I, N>, I, ...T]> {\n\t\treturn this.addConstraint(arrayLengthGreaterThan(length) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthGreaterThanOrEqual<N extends number>(length: N): ArrayValidator<[...Tuple<I, N>, ...T]> {\n\t\treturn this.addConstraint(arrayLengthGreaterThanOrEqual(length) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthEqual<N extends number>(length: N): ArrayValidator<[...Tuple<I, N>]> {\n\t\treturn this.addConstraint(arrayLengthEqual(length) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthNotEqual(length: number): ArrayValidator<[...T]> {\n\t\treturn this.addConstraint(arrayLengthNotEqual(length) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthRange<S extends number, E extends number>(\n\t\tstart: S,\n\t\tendBefore: E\n\t): ArrayValidator<Exclude<ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, E>]>>, ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, S>]>>>> {\n\t\treturn this.addConstraint(arrayLengthRange(start, endBefore) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthRangeInclusive<S extends number, E extends number>(\n\t\tstartAt: S,\n\t\tendAt: E\n\t): ArrayValidator<Exclude<ExpandSmallerTuples<[...Tuple<I, E>]>, ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, S>]>>>> {\n\t\treturn this.addConstraint(arrayLengthRangeInclusive(startAt, endAt) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthRangeExclusive<S extends number, E extends number>(\n\t\tstartAfter: S,\n\t\tendBefore: E\n\t): ArrayValidator<Exclude<ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, E>]>>, ExpandSmallerTuples<[...Tuple<T, S>]>>> {\n\t\treturn this.addConstraint(arrayLengthRangeExclusive(startAfter, endBefore) as IConstraint<T>) as any;\n\t}\n\n\tpublic get unique(): this {\n\t\treturn this.addConstraint(uniqueArray as IConstraint<T>);\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.constraints]);\n\t}\n\n\tprotected handle(values: unknown): Result<T, ValidationError | CombinedPropertyError> {\n\t\tif (!Array.isArray(values)) {\n\t\t\treturn Result.err(new ValidationError('s.array(T)', 'Expected an array', values));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(values as T);\n\t\t}\n\n\t\tconst errors: [number, BaseError][] = [];\n\t\tconst transformed: T = [] as unknown as T;\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst result = this.validator.run(values[i]);\n\t\t\tif (result.isOk()) transformed.push(result.value);\n\t\t\telse errors.push([i, result.error!]);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedPropertyError(errors));\n\t}\n}\n","import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { IConstraint } from './base/IConstraint';\nimport { Comparator, equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual } from './util/operators';\n\nexport type BigIntConstraintName = `s.bigint.${\n\t| 'lessThan'\n\t| 'lessThanOrEqual'\n\t| 'greaterThan'\n\t| 'greaterThanOrEqual'\n\t| 'equal'\n\t| 'notEqual'\n\t| 'divisibleBy'}`;\n\nfunction bigintComparator(comparator: Comparator, name: BigIntConstraintName, expected: string, number: bigint): IConstraint<bigint> {\n\treturn {\n\t\trun(input: bigint) {\n\t\t\treturn comparator(input, number) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, 'Invalid bigint value', input, expected));\n\t\t}\n\t};\n}\n\nexport function bigintLessThan(value: bigint): IConstraint<bigint> {\n\tconst expected = `expected < ${value}n`;\n\treturn bigintComparator(lessThan, 's.bigint.lessThan', expected, value);\n}\n\nexport function bigintLessThanOrEqual(value: bigint): IConstraint<bigint> {\n\tconst expected = `expected <= ${value}n`;\n\treturn bigintComparator(lessThanOrEqual, 's.bigint.lessThanOrEqual', expected, value);\n}\n\nexport function bigintGreaterThan(value: bigint): IConstraint<bigint> {\n\tconst expected = `expected > ${value}n`;\n\treturn bigintComparator(greaterThan, 's.bigint.greaterThan', expected, value);\n}\n\nexport function bigintGreaterThanOrEqual(value: bigint): IConstraint<bigint> {\n\tconst expected = `expected >= ${value}n`;\n\treturn bigintComparator(greaterThanOrEqual, 's.bigint.greaterThanOrEqual', expected, value);\n}\n\nexport function bigintEqual(value: bigint): IConstraint<bigint> {\n\tconst expected = `expected === ${value}n`;\n\treturn bigintComparator(equal, 's.bigint.equal', expected, value);\n}\n\nexport function bigintNotEqual(value: bigint): IConstraint<bigint> {\n\tconst expected = `expected !== ${value}n`;\n\treturn bigintComparator(notEqual, 's.bigint.notEqual', expected, value);\n}\n\nexport function bigintDivisibleBy(divider: bigint): IConstraint<bigint> {\n\tconst expected = `expected % ${divider}n === 0n`;\n\treturn {\n\t\trun(input: bigint) {\n\t\t\treturn input % divider === 0n //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.bigint.divisibleBy', 'BigInt is not divisible', input, expected));\n\t\t}\n\t};\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport {\n\tbigintDivisibleBy,\n\tbigintEqual,\n\tbigintGreaterThan,\n\tbigintGreaterThanOrEqual,\n\tbigintLessThan,\n\tbigintLessThanOrEqual,\n\tbigintNotEqual\n} from '../constraints/BigIntConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class BigIntValidator<T extends bigint> extends BaseValidator<T> {\n\tpublic lessThan(number: bigint): this {\n\t\treturn this.addConstraint(bigintLessThan(number) as IConstraint<T>);\n\t}\n\n\tpublic lessThanOrEqual(number: bigint): this {\n\t\treturn this.addConstraint(bigintLessThanOrEqual(number) as IConstraint<T>);\n\t}\n\n\tpublic greaterThan(number: bigint): this {\n\t\treturn this.addConstraint(bigintGreaterThan(number) as IConstraint<T>);\n\t}\n\n\tpublic greaterThanOrEqual(number: bigint): this {\n\t\treturn this.addConstraint(bigintGreaterThanOrEqual(number) as IConstraint<T>);\n\t}\n\n\tpublic equal<N extends bigint>(number: N): BigIntValidator<N> {\n\t\treturn this.addConstraint(bigintEqual(number) as IConstraint<T>) as unknown as BigIntValidator<N>;\n\t}\n\n\tpublic notEqual(number: bigint): this {\n\t\treturn this.addConstraint(bigintNotEqual(number) as IConstraint<T>);\n\t}\n\n\tpublic get positive(): this {\n\t\treturn this.greaterThanOrEqual(0n);\n\t}\n\n\tpublic get negative(): this {\n\t\treturn this.lessThan(0n);\n\t}\n\n\tpublic divisibleBy(number: bigint): this {\n\t\treturn this.addConstraint(bigintDivisibleBy(number) as IConstraint<T>);\n\t}\n\n\tpublic get abs(): this {\n\t\treturn this.transform((value) => (value < 0 ? -value : value) as T);\n\t}\n\n\tpublic intN(bits: number): this {\n\t\treturn this.transform((value) => BigInt.asIntN(bits, value) as T);\n\t}\n\n\tpublic uintN(bits: number): this {\n\t\treturn this.transform((value) => BigInt.asUintN(bits, value) as T);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn typeof value === 'bigint' //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.bigint', 'Expected a bigint primitive', value));\n\t}\n}\n","import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { IConstraint } from './base/IConstraint';\n\nexport type BooleanConstraintName = `s.boolean.${boolean}`;\n\nexport const booleanTrue: IConstraint<boolean, true> = {\n\trun(input: boolean) {\n\t\treturn input //\n\t\t\t? Result.ok(input)\n\t\t\t: Result.err(new ExpectedConstraintError('s.boolean.true', 'Invalid boolean value', input, 'true'));\n\t}\n};\n\nexport const booleanFalse: IConstraint<boolean, false> = {\n\trun(input: boolean) {\n\t\treturn input //\n\t\t\t? Result.err(new ExpectedConstraintError('s.boolean.false', 'Invalid boolean value', input, 'false'))\n\t\t\t: Result.ok(input);\n\t}\n};\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport { booleanFalse, booleanTrue } from '../constraints/BooleanConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class BooleanValidator<T extends boolean = boolean> extends BaseValidator<T> {\n\tpublic get true(): BooleanValidator<true> {\n\t\treturn this.addConstraint(booleanTrue as IConstraint<T>) as BooleanValidator<true>;\n\t}\n\n\tpublic get false(): BooleanValidator<false> {\n\t\treturn this.addConstraint(booleanFalse as IConstraint<T>) as BooleanValidator<false>;\n\t}\n\n\tpublic equal<R extends true | false>(value: R): BooleanValidator<R> {\n\t\treturn (value ? this.true : this.false) as BooleanValidator<R>;\n\t}\n\n\tpublic notEqual<R extends true | false>(value: R): BooleanValidator<R> {\n\t\treturn (value ? this.false : this.true) as BooleanValidator<R>;\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn typeof value === 'boolean' //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.boolean', 'Expected a boolean primitive', value));\n\t}\n}\n","import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { IConstraint } from './base/IConstraint';\nimport { Comparator, equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual } from './util/operators';\n\nexport type DateConstraintName = `s.date.${\n\t| 'lessThan'\n\t| 'lessThanOrEqual'\n\t| 'greaterThan'\n\t| 'greaterThanOrEqual'\n\t| 'equal'\n\t| 'notEqual'\n\t| 'valid'\n\t| 'invalid'}`;\n\nfunction dateComparator(comparator: Comparator, name: DateConstraintName, expected: string, number: number): IConstraint<Date> {\n\treturn {\n\t\trun(input: Date) {\n\t\t\treturn comparator(input.getTime(), number) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, 'Invalid Date value', input, expected));\n\t\t}\n\t};\n}\n\nexport function dateLessThan(value: Date): IConstraint<Date> {\n\tconst expected = `expected < ${value.toISOString()}`;\n\treturn dateComparator(lessThan, 's.date.lessThan', expected, value.getTime());\n}\n\nexport function dateLessThanOrEqual(value: Date): IConstraint<Date> {\n\tconst expected = `expected <= ${value.toISOString()}`;\n\treturn dateComparator(lessThanOrEqual, 's.date.lessThanOrEqual', expected, value.getTime());\n}\n\nexport function dateGreaterThan(value: Date): IConstraint<Date> {\n\tconst expected = `expected > ${value.toISOString()}`;\n\treturn dateComparator(greaterThan, 's.date.greaterThan', expected, value.getTime());\n}\n\nexport function dateGreaterThanOrEqual(value: Date): IConstraint<Date> {\n\tconst expected = `expected >= ${value.toISOString()}`;\n\treturn dateComparator(greaterThanOrEqual, 's.date.greaterThanOrEqual', expected, value.getTime());\n}\n\nexport function dateEqual(value: Date): IConstraint<Date> {\n\tconst expected = `expected === ${value.toISOString()}`;\n\treturn dateComparator(equal, 's.date.equal', expected, value.getTime());\n}\n\nexport function dateNotEqual(value: Date): IConstraint<Date> {\n\tconst expected = `expected !== ${value.toISOString()}`;\n\treturn dateComparator(notEqual, 's.date.notEqual', expected, value.getTime());\n}\n\nexport const dateInvalid: IConstraint<Date> = {\n\trun(input: Date) {\n\t\treturn Number.isNaN(input.getTime()) //\n\t\t\t? Result.ok(input)\n\t\t\t: Result.err(new ExpectedConstraintError('s.date.invalid', 'Invalid Date value', input, 'expected === NaN'));\n\t}\n};\n\nexport const dateValid: IConstraint<Date> = {\n\trun(input: Date) {\n\t\treturn Number.isNaN(input.getTime()) //\n\t\t\t? Result.err(new ExpectedConstraintError('s.date.valid', 'Invalid Date value', input, 'expected !== NaN'))\n\t\t\t: Result.ok(input);\n\t}\n};\n","import {\n\tdateEqual,\n\tdateGreaterThan,\n\tdateGreaterThanOrEqual,\n\tdateInvalid,\n\tdateLessThan,\n\tdateLessThanOrEqual,\n\tdateNotEqual,\n\tdateValid\n} from '../constraints/DateConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class DateValidator extends BaseValidator<Date> {\n\tpublic lessThan(date: Date | number | string): this {\n\t\treturn this.addConstraint(dateLessThan(new Date(date)));\n\t}\n\n\tpublic lessThanOrEqual(date: Date | number | string): this {\n\t\treturn this.addConstraint(dateLessThanOrEqual(new Date(date)));\n\t}\n\n\tpublic greaterThan(date: Date | number | string): this {\n\t\treturn this.addConstraint(dateGreaterThan(new Date(date)));\n\t}\n\n\tpublic greaterThanOrEqual(date: Date | number | string): this {\n\t\treturn this.addConstraint(dateGreaterThanOrEqual(new Date(date)));\n\t}\n\n\tpublic equal(date: Date | number | string): this {\n\t\tconst resolved = new Date(date);\n\t\treturn Number.isNaN(resolved.getTime()) //\n\t\t\t? this.invalid\n\t\t\t: this.addConstraint(dateEqual(resolved));\n\t}\n\n\tpublic notEqual(date: Date | number | string): this {\n\t\tconst resolved = new Date(date);\n\t\treturn Number.isNaN(resolved.getTime()) //\n\t\t\t? this.valid\n\t\t\t: this.addConstraint(dateNotEqual(resolved));\n\t}\n\n\tpublic get valid(): this {\n\t\treturn this.addConstraint(dateValid);\n\t}\n\n\tpublic get invalid(): this {\n\t\treturn this.addConstraint(dateInvalid);\n\t}\n\n\tprotected handle(value: unknown): Result<Date, ValidationError> {\n\t\treturn value instanceof Date //\n\t\t\t? Result.ok(value)\n\t\t\t: Result.err(new ValidationError('s.date', 'Expected a Date', value));\n\t}\n}\n","import { inspect, type InspectOptionsStylized } from 'node:util';\nimport { customInspectSymbolStackLess } from './BaseError';\nimport { ValidationError } from './ValidationError';\n\nexport class ExpectedValidationError<T> extends ValidationError {\n\tpublic readonly expected: T;\n\n\tpublic constructor(validator: string, message: string, given: unknown, expected: T) {\n\t\tsuper(validator, message, given);\n\t\tthis.expected = expected;\n\t}\n\n\tpublic override toJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tvalidator: this.validator,\n\t\t\tgiven: this.given,\n\t\t\texpected: this.expected\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst validator = options.stylize(this.validator, 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[ExpectedValidationError: ${validator}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1 };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst expected = inspect(this.expected, newOptions).replace(/\\n/g, padding);\n\t\tconst given = inspect(this.given, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('ExpectedValidationError', 'special')} > ${validator}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst expectedBlock = `\\n  ${options.stylize('Expected:', 'string')}${padding}${expected}`;\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${expectedBlock}\\n${givenBlock}`;\n\t}\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport { ExpectedValidationError } from '../lib/errors/ExpectedValidationError';\nimport { Result } from '../lib/Result';\nimport type { Constructor } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class InstanceValidator<T> extends BaseValidator<T> {\n\tpublic readonly expected: Constructor<T>;\n\n\tpublic constructor(expected: Constructor<T>, constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.expected = expected;\n\t}\n\n\tprotected handle(value: unknown): Result<T, ExpectedValidationError<Constructor<T>>> {\n\t\treturn value instanceof this.expected //\n\t\t\t? Result.ok(value)\n\t\t\t: Result.err(new ExpectedValidationError('s.instance(V)', 'Expected', value, this.expected));\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.expected, this.constraints]);\n\t}\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport { ExpectedValidationError } from '../lib/errors/ExpectedValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class LiteralValidator<T> extends BaseValidator<T> {\n\tpublic readonly expected: T;\n\n\tpublic constructor(literal: T, constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.expected = literal;\n\t}\n\n\tprotected handle(value: unknown): Result<T, ExpectedValidationError<T>> {\n\t\treturn Object.is(value, this.expected) //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ExpectedValidationError('s.literal(V)', 'Expected values to be equals', value, this.expected));\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.expected, this.constraints]);\n\t}\n}\n","import { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class NeverValidator extends BaseValidator<never> {\n\tprotected handle(value: unknown): Result<never, ValidationError> {\n\t\treturn Result.err(new ValidationError('s.never', 'Expected a value to not be passed', value));\n\t}\n}\n","import { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class NullishValidator extends BaseValidator<undefined | null> {\n\tprotected handle(value: unknown): Result<undefined | null, ValidationError> {\n\t\treturn value === undefined || value === null //\n\t\t\t? Result.ok(value)\n\t\t\t: Result.err(new ValidationError('s.nullish', 'Expected undefined or null', value));\n\t}\n}\n","import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { IConstraint } from './base/IConstraint';\nimport { Comparator, equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual } from './util/operators';\n\nexport type NumberConstraintName = `s.number.${\n\t| 'lessThan'\n\t| 'lessThanOrEqual'\n\t| 'greaterThan'\n\t| 'greaterThanOrEqual'\n\t| 'equal'\n\t| 'equal(NaN)'\n\t| 'notEqual'\n\t| 'notEqual(NaN)'\n\t| 'int'\n\t| 'safeInt'\n\t| 'finite'\n\t| 'divisibleBy'}`;\n\nfunction numberComparator(comparator: Comparator, name: NumberConstraintName, expected: string, number: number): IConstraint<number> {\n\treturn {\n\t\trun(input: number) {\n\t\t\treturn comparator(input, number) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, 'Invalid number value', input, expected));\n\t\t}\n\t};\n}\n\nexport function numberLessThan(value: number): IConstraint<number> {\n\tconst expected = `expected < ${value}`;\n\treturn numberComparator(lessThan, 's.number.lessThan', expected, value);\n}\n\nexport function numberLessThanOrEqual(value: number): IConstraint<number> {\n\tconst expected = `expected <= ${value}`;\n\treturn numberComparator(lessThanOrEqual, 's.number.lessThanOrEqual', expected, value);\n}\n\nexport function numberGreaterThan(value: number): IConstraint<number> {\n\tconst expected = `expected > ${value}`;\n\treturn numberComparator(greaterThan, 's.number.greaterThan', expected, value);\n}\n\nexport function numberGreaterThanOrEqual(value: number): IConstraint<number> {\n\tconst expected = `expected >= ${value}`;\n\treturn numberComparator(greaterThanOrEqual, 's.number.greaterThanOrEqual', expected, value);\n}\n\nexport function numberEqual(value: number): IConstraint<number> {\n\tconst expected = `expected === ${value}`;\n\treturn numberComparator(equal, 's.number.equal', expected, value);\n}\n\nexport function numberNotEqual(value: number): IConstraint<number> {\n\tconst expected = `expected !== ${value}`;\n\treturn numberComparator(notEqual, 's.number.notEqual', expected, value);\n}\n\nexport const numberInt: IConstraint<number> = {\n\trun(input: number) {\n\t\treturn Number.isInteger(input) //\n\t\t\t? Result.ok(input)\n\t\t\t: Result.err(\n\t\t\t\t\tnew ExpectedConstraintError('s.number.int', 'Given value is not an integer', input, 'Number.isInteger(expected) to be true')\n\t\t\t  );\n\t}\n};\n\nexport const numberSafeInt: IConstraint<number> = {\n\trun(input: number) {\n\t\treturn Number.isSafeInteger(input) //\n\t\t\t? Result.ok(input)\n\t\t\t: Result.err(\n\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t's.number.safeInt',\n\t\t\t\t\t\t'Given value is not a safe integer',\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\t'Number.isSafeInteger(expected) to be true'\n\t\t\t\t\t)\n\t\t\t  );\n\t}\n};\n\nexport const numberFinite: IConstraint<number> = {\n\trun(input: number) {\n\t\treturn Number.isFinite(input) //\n\t\t\t? Result.ok(input)\n\t\t\t: Result.err(new ExpectedConstraintError('s.number.finite', 'Given value is not finite', input, 'Number.isFinite(expected) to be true'));\n\t}\n};\n\nexport const numberNaN: IConstraint<number> = {\n\trun(input: number) {\n\t\treturn Number.isNaN(input) //\n\t\t\t? Result.ok(input)\n\t\t\t: Result.err(new ExpectedConstraintError('s.number.equal(NaN)', 'Invalid number value', input, 'expected === NaN'));\n\t}\n};\n\nexport const numberNotNaN: IConstraint<number> = {\n\trun(input: number) {\n\t\treturn Number.isNaN(input) //\n\t\t\t? Result.err(new ExpectedConstraintError('s.number.notEqual(NaN)', 'Invalid number value', input, 'expected !== NaN'))\n\t\t\t: Result.ok(input);\n\t}\n};\n\nexport function numberDivisibleBy(divider: number): IConstraint<number> {\n\tconst expected = `expected % ${divider} === 0`;\n\treturn {\n\t\trun(input: number) {\n\t\t\treturn input % divider === 0 //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.number.divisibleBy', 'Number is not divisible', input, expected));\n\t\t}\n\t};\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport {\n\tnumberDivisibleBy,\n\tnumberEqual,\n\tnumberFinite,\n\tnumberGreaterThan,\n\tnumberGreaterThanOrEqual,\n\tnumberInt,\n\tnumberLessThan,\n\tnumberLessThanOrEqual,\n\tnumberNaN,\n\tnumberNotEqual,\n\tnumberNotNaN,\n\tnumberSafeInt\n} from '../constraints/NumberConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class NumberValidator<T extends number> extends BaseValidator<T> {\n\tpublic lessThan(number: number): this {\n\t\treturn this.addConstraint(numberLessThan(number) as IConstraint<T>);\n\t}\n\n\tpublic lessThanOrEqual(number: number): this {\n\t\treturn this.addConstraint(numberLessThanOrEqual(number) as IConstraint<T>);\n\t}\n\n\tpublic greaterThan(number: number): this {\n\t\treturn this.addConstraint(numberGreaterThan(number) as IConstraint<T>);\n\t}\n\n\tpublic greaterThanOrEqual(number: number): this {\n\t\treturn this.addConstraint(numberGreaterThanOrEqual(number) as IConstraint<T>);\n\t}\n\n\tpublic equal<N extends number>(number: N): NumberValidator<N> {\n\t\treturn Number.isNaN(number) //\n\t\t\t? (this.addConstraint(numberNaN as IConstraint<T>) as unknown as NumberValidator<N>)\n\t\t\t: (this.addConstraint(numberEqual(number) as IConstraint<T>) as unknown as NumberValidator<N>);\n\t}\n\n\tpublic notEqual(number: number): this {\n\t\treturn Number.isNaN(number) //\n\t\t\t? this.addConstraint(numberNotNaN as IConstraint<T>)\n\t\t\t: this.addConstraint(numberNotEqual(number) as IConstraint<T>);\n\t}\n\n\tpublic get int(): this {\n\t\treturn this.addConstraint(numberInt as IConstraint<T>);\n\t}\n\n\tpublic get safeInt(): this {\n\t\treturn this.addConstraint(numberSafeInt as IConstraint<T>);\n\t}\n\n\tpublic get finite(): this {\n\t\treturn this.addConstraint(numberFinite as IConstraint<T>);\n\t}\n\n\tpublic get positive(): this {\n\t\treturn this.greaterThanOrEqual(0);\n\t}\n\n\tpublic get negative(): this {\n\t\treturn this.lessThan(0);\n\t}\n\n\tpublic divisibleBy(divider: number): this {\n\t\treturn this.addConstraint(numberDivisibleBy(divider) as IConstraint<T>);\n\t}\n\n\tpublic get abs(): this {\n\t\treturn this.transform(Math.abs as (value: number) => T);\n\t}\n\n\tpublic get sign(): this {\n\t\treturn this.transform(Math.sign as (value: number) => T);\n\t}\n\n\tpublic get trunc(): this {\n\t\treturn this.transform(Math.trunc as (value: number) => T);\n\t}\n\n\tpublic get floor(): this {\n\t\treturn this.transform(Math.floor as (value: number) => T);\n\t}\n\n\tpublic get fround(): this {\n\t\treturn this.transform(Math.fround as (value: number) => T);\n\t}\n\n\tpublic get round(): this {\n\t\treturn this.transform(Math.round as (value: number) => T);\n\t}\n\n\tpublic get ceil(): this {\n\t\treturn this.transform(Math.ceil as (value: number) => T);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn typeof value === 'number' //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.number', 'Expected a number primitive', value));\n\t}\n}\n","import type { InspectOptionsStylized } from 'node:util';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\n\nexport class MissingPropertyError extends BaseError {\n\tpublic readonly property: PropertyKey;\n\n\tpublic constructor(property: PropertyKey) {\n\t\tsuper('A required property is missing');\n\t\tthis.property = property;\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tproperty: this.property\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst property = options.stylize(this.property.toString(), 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[MissingPropertyError: ${property}]`, 'special');\n\t\t}\n\n\t\tconst header = `${options.stylize('MissingPropertyError', 'special')} > ${property}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\treturn `${header}\\n  ${message}`;\n\t}\n}\n","import { inspect, type InspectOptionsStylized } from 'node:util';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\n\nexport class UnknownPropertyError extends BaseError {\n\tpublic readonly property: PropertyKey;\n\tpublic readonly value: unknown;\n\n\tpublic constructor(property: PropertyKey, value: unknown) {\n\t\tsuper('Received unexpected property');\n\n\t\tthis.property = property;\n\t\tthis.value = value;\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tproperty: this.property,\n\t\t\tvalue: this.value\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst property = options.stylize(this.property.toString(), 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[UnknownPropertyError: ${property}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1, compact: true };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst given = inspect(this.value, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('UnknownPropertyError', 'special')} > ${property}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${givenBlock}`;\n\t}\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport { Result } from '../lib/Result';\nimport type { ValidatorError } from './BaseValidator';\nimport { BaseValidator } from './imports';\nimport { getValue } from './util/getValue';\n\nexport class DefaultValidator<T> extends BaseValidator<T> {\n\tprivate readonly validator: BaseValidator<T>;\n\tprivate defaultValue: T | (() => T);\n\n\tpublic constructor(validator: BaseValidator<T>, value: T | (() => T), constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.validator = validator;\n\t\tthis.defaultValue = value;\n\t}\n\n\tpublic override default(value: Exclude<T, undefined> | (() => Exclude<T, undefined>)): DefaultValidator<Exclude<T, undefined>> {\n\t\tconst clone = this.clone() as unknown as DefaultValidator<Exclude<T, undefined>>;\n\t\tclone.defaultValue = value;\n\t\treturn clone;\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidatorError> {\n\t\treturn typeof value === 'undefined' //\n\t\t\t? Result.ok(getValue(this.defaultValue))\n\t\t\t: this.validator['handle'](value); // eslint-disable-line @typescript-eslint/dot-notation\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.defaultValue, this.constraints]);\n\t}\n}\n","import type { InspectOptionsStylized } from 'node:util';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\n\nexport class CombinedError extends BaseError {\n\tpublic readonly errors: readonly BaseError[];\n\n\tpublic constructor(errors: readonly BaseError[]) {\n\t\tsuper('Received one or more errors');\n\n\t\tthis.errors = errors;\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize('[CombinedError]', 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1, compact: true };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\n\t\tconst header = `${options.stylize('CombinedError', 'special')} (${options.stylize(this.errors.length.toString(), 'number')})`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst errors = this.errors\n\t\t\t.map((error, i) => {\n\t\t\t\tconst index = options.stylize((i + 1).toString(), 'number');\n\t\t\t\tconst body = error[customInspectSymbolStackLess](depth - 1, newOptions).replace(/\\n/g, padding);\n\n\t\t\t\treturn `  ${index} ${body}`;\n\t\t\t})\n\t\t\t.join('\\n\\n');\n\t\treturn `${header}\\n  ${message}\\n\\n${errors}`;\n\t}\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedError } from '../lib/errors/CombinedError';\nimport type { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator, LiteralValidator, NullishValidator } from './imports';\n\nexport class UnionValidator<T> extends BaseValidator<T> {\n\tprivate validators: readonly BaseValidator<T>[];\n\n\tpublic constructor(validators: readonly BaseValidator<T>[], constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.validators = validators;\n\t}\n\n\tpublic override get optional(): UnionValidator<T | undefined> {\n\t\tif (this.validators.length === 0) return new UnionValidator<T | undefined>([new LiteralValidator(undefined)], this.constraints);\n\n\t\tconst [validator] = this.validators;\n\t\tif (validator instanceof LiteralValidator) {\n\t\t\t// If already optional, return a clone:\n\t\t\tif (validator.expected === undefined) return this.clone();\n\n\t\t\t// If it's nullable, convert the nullable validator into a nullish validator to optimize `null | undefined`:\n\t\t\tif (validator.expected === null) {\n\t\t\t\treturn new UnionValidator<T | null | undefined>(\n\t\t\t\t\t[new NullishValidator(), ...this.validators.slice(1)],\n\t\t\t\t\tthis.constraints\n\t\t\t\t) as UnionValidator<T | undefined>;\n\t\t\t}\n\t\t} else if (validator instanceof NullishValidator) {\n\t\t\t// If it's already nullish (which validates optional), return a clone:\n\t\t\treturn this.clone();\n\t\t}\n\n\t\treturn new UnionValidator([new LiteralValidator(undefined), ...this.validators]);\n\t}\n\n\tpublic get required(): UnionValidator<Exclude<T, undefined>> {\n\t\ttype RequiredValidator = UnionValidator<Exclude<T, undefined>>;\n\n\t\tif (this.validators.length === 0) return this.clone() as unknown as RequiredValidator;\n\n\t\tconst [validator] = this.validators;\n\t\tif (validator instanceof LiteralValidator) {\n\t\t\tif (validator.expected === undefined) return new UnionValidator(this.validators.slice(1), this.constraints) as RequiredValidator;\n\t\t} else if (validator instanceof NullishValidator) {\n\t\t\treturn new UnionValidator([new LiteralValidator(null), ...this.validators.slice(1)], this.constraints) as RequiredValidator;\n\t\t}\n\n\t\treturn this.clone() as unknown as RequiredValidator;\n\t}\n\n\tpublic override get nullable(): UnionValidator<T | null> {\n\t\tif (this.validators.length === 0) return new UnionValidator<T | null>([new LiteralValidator(null)], this.constraints);\n\n\t\tconst [validator] = this.validators;\n\t\tif (validator instanceof LiteralValidator) {\n\t\t\t// If already nullable, return a clone:\n\t\t\tif (validator.expected === null) return this.clone();\n\n\t\t\t// If it's optional, convert the optional validator into a nullish validator to optimize `null | undefined`:\n\t\t\tif (validator.expected === undefined) {\n\t\t\t\treturn new UnionValidator<T | null | undefined>(\n\t\t\t\t\t[new NullishValidator(), ...this.validators.slice(1)],\n\t\t\t\t\tthis.constraints\n\t\t\t\t) as UnionValidator<T | null>;\n\t\t\t}\n\t\t} else if (validator instanceof NullishValidator) {\n\t\t\t// If it's already nullish (which validates nullable), return a clone:\n\t\t\treturn this.clone();\n\t\t}\n\n\t\treturn new UnionValidator([new LiteralValidator(null), ...this.validators]);\n\t}\n\n\tpublic override get nullish(): UnionValidator<T | null | undefined> {\n\t\tif (this.validators.length === 0) return new UnionValidator<T | null | undefined>([new NullishValidator()], this.constraints);\n\n\t\tconst [validator] = this.validators;\n\t\tif (validator instanceof LiteralValidator) {\n\t\t\t// If already nullable or optional, promote the union to nullish:\n\t\t\tif (validator.expected === null || validator.expected === undefined) {\n\t\t\t\treturn new UnionValidator<T | null | undefined>([new NullishValidator(), ...this.validators.slice(1)], this.constraints);\n\t\t\t}\n\t\t} else if (validator instanceof NullishValidator) {\n\t\t\t// If it's already nullish, return a clone:\n\t\t\treturn this.clone();\n\t\t}\n\n\t\treturn new UnionValidator<T | null | undefined>([new NullishValidator(), ...this.validators]);\n\t}\n\n\tpublic override or<O>(...predicates: readonly BaseValidator<O>[]): UnionValidator<T | O> {\n\t\treturn new UnionValidator<T | O>([...this.validators, ...predicates]);\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validators, this.constraints]);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError | CombinedError> {\n\t\tconst errors: BaseError[] = [];\n\n\t\tfor (const validator of this.validators) {\n\t\t\tconst result = validator.run(value);\n\t\t\tif (result.isOk()) return result as Result<T, CombinedError>;\n\t\t\terrors.push(result.error!);\n\t\t}\n\n\t\treturn Result.err(new CombinedError(errors));\n\t}\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { MissingPropertyError } from '../lib/errors/MissingPropertyError';\nimport { UnknownPropertyError } from '../lib/errors/UnknownPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { MappedObjectValidator, NonNullObject, UndefinedToOptional } from '../lib/util-types';\nimport { BaseValidator } from './BaseValidator';\nimport { DefaultValidator } from './DefaultValidator';\nimport { LiteralValidator } from './LiteralValidator';\nimport { NullishValidator } from './NullishValidator';\nimport { UnionValidator } from './UnionValidator';\n\nexport class ObjectValidator<T extends NonNullObject, I = UndefinedToOptional<T>> extends BaseValidator<I> {\n\tpublic readonly shape: MappedObjectValidator<T>;\n\tpublic readonly strategy: ObjectValidatorStrategy;\n\tprivate readonly keys: readonly (keyof I)[] = [];\n\tprivate readonly handleStrategy: (value: NonNullObject) => Result<I, CombinedPropertyError>;\n\n\tprivate readonly requiredKeys = new Map<keyof I, BaseValidator<unknown>>();\n\tprivate readonly possiblyUndefinedKeys = new Map<keyof I, BaseValidator<unknown>>();\n\tprivate readonly possiblyUndefinedKeysWithDefaults = new Map<keyof I, DefaultValidator<unknown>>();\n\n\tpublic constructor(\n\t\tshape: MappedObjectValidator<T>,\n\t\tstrategy: ObjectValidatorStrategy = ObjectValidatorStrategy.Ignore,\n\t\tconstraints: readonly IConstraint<I>[] = []\n\t) {\n\t\tsuper(constraints);\n\t\tthis.shape = shape;\n\t\tthis.strategy = strategy;\n\n\t\tswitch (this.strategy) {\n\t\t\tcase ObjectValidatorStrategy.Ignore:\n\t\t\t\tthis.handleStrategy = (value) => this.handleIgnoreStrategy(value);\n\t\t\t\tbreak;\n\t\t\tcase ObjectValidatorStrategy.Strict: {\n\t\t\t\tthis.handleStrategy = (value) => this.handleStrictStrategy(value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ObjectValidatorStrategy.Passthrough:\n\t\t\t\tthis.handleStrategy = (value) => this.handlePassthroughStrategy(value);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst shapeEntries = Object.entries(shape) as [keyof I, BaseValidator<T>][];\n\t\tthis.keys = shapeEntries.map(([key]) => key);\n\n\t\tfor (const [key, validator] of shapeEntries) {\n\t\t\tif (validator instanceof UnionValidator) {\n\t\t\t\tconst [possiblyLiteralOrNullishPredicate] = validator['validators'];\n\n\t\t\t\tif (possiblyLiteralOrNullishPredicate instanceof NullishValidator) {\n\t\t\t\t\tthis.possiblyUndefinedKeys.set(key, validator);\n\t\t\t\t} else if (possiblyLiteralOrNullishPredicate instanceof LiteralValidator) {\n\t\t\t\t\tif (possiblyLiteralOrNullishPredicate.expected === undefined) {\n\t\t\t\t\t\tthis.possiblyUndefinedKeys.set(key, validator);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.requiredKeys.set(key, validator);\n\t\t\t\t\t}\n\t\t\t\t} else if (validator instanceof DefaultValidator) {\n\t\t\t\t\tthis.possiblyUndefinedKeysWithDefaults.set(key, validator);\n\t\t\t\t} else {\n\t\t\t\t\tthis.requiredKeys.set(key, validator);\n\t\t\t\t}\n\t\t\t} else if (validator instanceof NullishValidator) {\n\t\t\t\tthis.possiblyUndefinedKeys.set(key, validator);\n\t\t\t} else if (validator instanceof LiteralValidator) {\n\t\t\t\tif (validator.expected === undefined) {\n\t\t\t\t\tthis.possiblyUndefinedKeys.set(key, validator);\n\t\t\t\t} else {\n\t\t\t\t\tthis.requiredKeys.set(key, validator);\n\t\t\t\t}\n\t\t\t} else if (validator instanceof DefaultValidator) {\n\t\t\t\tthis.possiblyUndefinedKeysWithDefaults.set(key, validator);\n\t\t\t} else {\n\t\t\t\tthis.requiredKeys.set(key, validator);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get strict(): this {\n\t\treturn Reflect.construct(this.constructor, [this.shape, ObjectValidatorStrategy.Strict, this.constraints]);\n\t}\n\n\tpublic get ignore(): this {\n\t\treturn Reflect.construct(this.constructor, [this.shape, ObjectValidatorStrategy.Ignore, this.constraints]);\n\t}\n\n\tpublic get passthrough(): this {\n\t\treturn Reflect.construct(this.constructor, [this.shape, ObjectValidatorStrategy.Passthrough, this.constraints]);\n\t}\n\n\tpublic get partial(): ObjectValidator<{ [Key in keyof I]?: I[Key] }> {\n\t\tconst shape = Object.fromEntries(this.keys.map((key) => [key, this.shape[key as unknown as keyof typeof this.shape].optional]));\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, this.constraints]);\n\t}\n\n\tpublic get required(): ObjectValidator<{ [Key in keyof I]-?: I[Key] }> {\n\t\tconst shape = Object.fromEntries(\n\t\t\tthis.keys.map((key) => {\n\t\t\t\tlet validator = this.shape[key as unknown as keyof typeof this.shape];\n\t\t\t\tif (validator instanceof UnionValidator) validator = validator.required;\n\t\t\t\treturn [key, validator];\n\t\t\t})\n\t\t);\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, this.constraints]);\n\t}\n\n\tpublic extend<ET extends NonNullObject>(schema: ObjectValidator<ET> | MappedObjectValidator<ET>): ObjectValidator<T & ET> {\n\t\tconst shape = { ...this.shape, ...(schema instanceof ObjectValidator ? schema.shape : schema) };\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, this.constraints]);\n\t}\n\n\tpublic pick<K extends keyof I>(keys: readonly K[]): ObjectValidator<{ [Key in keyof Pick<I, K>]: I[Key] }> {\n\t\tconst shape = Object.fromEntries(\n\t\t\tkeys.filter((key) => this.keys.includes(key)).map((key) => [key, this.shape[key as unknown as keyof typeof this.shape]])\n\t\t);\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, this.constraints]);\n\t}\n\n\tpublic omit<K extends keyof I>(keys: readonly K[]): ObjectValidator<{ [Key in keyof Omit<I, K>]: I[Key] }> {\n\t\tconst shape = Object.fromEntries(\n\t\t\tthis.keys.filter((key) => !keys.includes(key as any)).map((key) => [key, this.shape[key as unknown as keyof typeof this.shape]])\n\t\t);\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, this.constraints]);\n\t}\n\n\tprotected override handle(value: unknown): Result<I, ValidationError | CombinedPropertyError> {\n\t\tconst typeOfValue = typeof value;\n\t\tif (typeOfValue !== 'object') {\n\t\t\treturn Result.err(new ValidationError('s.object(T)', `Expected the value to be an object, but received ${typeOfValue} instead`, value));\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn Result.err(new ValidationError('s.object(T)', 'Expected the value to not be null', value));\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn Result.err(new ValidationError('s.object(T)', 'Expected the value to not be an array', value));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(value as I);\n\t\t}\n\n\t\treturn this.handleStrategy(value as NonNullObject);\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.shape, this.strategy, this.constraints]);\n\t}\n\n\tprivate handleIgnoreStrategy(value: NonNullObject): Result<I, CombinedPropertyError> {\n\t\tconst errors: [PropertyKey, BaseError][] = [];\n\t\tconst finalObject = {} as I;\n\t\tconst inputEntries = new Map(Object.entries(value) as [keyof I, unknown][]);\n\n\t\tconst runPredicate = (key: keyof I, predicate: BaseValidator<unknown>) => {\n\t\t\tconst result = predicate.run(value[key as keyof NonNullObject]);\n\n\t\t\tif (result.isOk()) {\n\t\t\t\tfinalObject[key] = result.value as I[keyof I];\n\t\t\t} else {\n\t\t\t\tconst error = result.error!;\n\t\t\t\terrors.push([key, error]);\n\t\t\t}\n\t\t};\n\n\t\tfor (const [key, predicate] of this.requiredKeys) {\n\t\t\tif (inputEntries.delete(key)) {\n\t\t\t\trunPredicate(key, predicate);\n\t\t\t} else {\n\t\t\t\terrors.push([key, new MissingPropertyError(key)]);\n\t\t\t}\n\t\t}\n\n\t\t// Run possibly undefined keys that also have defaults even if there are no more keys to process (this is necessary so we fill in those defaults)\n\t\tfor (const [key, validator] of this.possiblyUndefinedKeysWithDefaults) {\n\t\t\tinputEntries.delete(key);\n\t\t\trunPredicate(key, validator);\n\t\t}\n\n\t\t// Early exit if there are no more properties to validate in the object and there are errors to report\n\t\tif (inputEntries.size === 0) {\n\t\t\treturn errors.length === 0 //\n\t\t\t\t? Result.ok(finalObject)\n\t\t\t\t: Result.err(new CombinedPropertyError(errors));\n\t\t}\n\n\t\t// In the event the remaining keys to check are less than the number of possible undefined keys, we check those\n\t\t// as it could yield a faster execution\n\t\tconst checkInputEntriesInsteadOfSchemaKeys = this.possiblyUndefinedKeys.size > inputEntries.size;\n\n\t\tif (checkInputEntriesInsteadOfSchemaKeys) {\n\t\t\tfor (const [key] of inputEntries) {\n\t\t\t\tconst predicate = this.possiblyUndefinedKeys.get(key);\n\n\t\t\t\tif (predicate) {\n\t\t\t\t\trunPredicate(key, predicate);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const [key, predicate] of this.possiblyUndefinedKeys) {\n\t\t\t\tif (inputEntries.delete(key)) {\n\t\t\t\t\trunPredicate(key, predicate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(finalObject)\n\t\t\t: Result.err(new CombinedPropertyError(errors));\n\t}\n\n\tprivate handleStrictStrategy(value: NonNullObject): Result<I, CombinedPropertyError> {\n\t\tconst errors: [PropertyKey, BaseError][] = [];\n\t\tconst finalResult = {} as I;\n\t\tconst inputEntries = new Map(Object.entries(value) as [keyof I, unknown][]);\n\n\t\tconst runPredicate = (key: keyof I, predicate: BaseValidator<unknown>) => {\n\t\t\tconst result = predicate.run(value[key as keyof NonNullObject]);\n\n\t\t\tif (result.isOk()) {\n\t\t\t\tfinalResult[key] = result.value as I[keyof I];\n\t\t\t} else {\n\t\t\t\tconst error = result.error!;\n\t\t\t\terrors.push([key, error]);\n\t\t\t}\n\t\t};\n\n\t\tfor (const [key, predicate] of this.requiredKeys) {\n\t\t\tif (inputEntries.delete(key)) {\n\t\t\t\trunPredicate(key, predicate);\n\t\t\t} else {\n\t\t\t\terrors.push([key, new MissingPropertyError(key)]);\n\t\t\t}\n\t\t}\n\n\t\t// Run possibly undefined keys that also have defaults even if there are no more keys to process (this is necessary so we fill in those defaults)\n\t\tfor (const [key, validator] of this.possiblyUndefinedKeysWithDefaults) {\n\t\t\tinputEntries.delete(key);\n\t\t\trunPredicate(key, validator);\n\t\t}\n\n\t\tfor (const [key, predicate] of this.possiblyUndefinedKeys) {\n\t\t\t// All of these validators are assumed to be possibly undefined, so if we have gone through the entire object and there's still validators,\n\t\t\t// safe to assume we're done here\n\t\t\tif (inputEntries.size === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (inputEntries.delete(key)) {\n\t\t\t\trunPredicate(key, predicate);\n\t\t\t}\n\t\t}\n\n\t\tif (inputEntries.size !== 0) {\n\t\t\tfor (const [key, value] of inputEntries.entries()) {\n\t\t\t\terrors.push([key, new UnknownPropertyError(key, value)]);\n\t\t\t}\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(finalResult)\n\t\t\t: Result.err(new CombinedPropertyError(errors));\n\t}\n\n\tprivate handlePassthroughStrategy(value: NonNullObject): Result<I, CombinedPropertyError> {\n\t\tconst result = this.handleIgnoreStrategy(value);\n\t\treturn result.isErr() ? result : Result.ok({ ...value, ...result.value } as I);\n\t}\n}\n\nexport const enum ObjectValidatorStrategy {\n\tIgnore,\n\tStrict,\n\tPassthrough\n}\n","import type { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class PassthroughValidator<T extends any | unknown> extends BaseValidator<T> {\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn Result.ok(value as T);\n\t}\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class RecordValidator<T> extends BaseValidator<Record<string, T>> {\n\tprivate readonly validator: BaseValidator<T>;\n\n\tpublic constructor(validator: BaseValidator<T>, constraints: readonly IConstraint<Record<string, T>>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.validator = validator;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.constraints]);\n\t}\n\n\tprotected handle(value: unknown): Result<Record<string, T>, ValidationError | CombinedPropertyError> {\n\t\tif (typeof value !== 'object') {\n\t\t\treturn Result.err(new ValidationError('s.record(T)', 'Expected an object', value));\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn Result.err(new ValidationError('s.record(T)', 'Expected the value to not be null', value));\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn Result.err(new ValidationError('s.record(T)', 'Expected the value to not be an array', value));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(value as Record<string, T>);\n\t\t}\n\n\t\tconst errors: [string, BaseError][] = [];\n\t\tconst transformed: Record<string, T> = {};\n\n\t\tfor (const [key, val] of Object.entries(value!)) {\n\t\t\tconst result = this.validator.run(val);\n\t\t\tif (result.isOk()) transformed[key] = result.value;\n\t\t\telse errors.push([key, result.error!]);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedPropertyError(errors));\n\t}\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedError } from '../lib/errors/CombinedError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class SetValidator<T> extends BaseValidator<Set<T>> {\n\tprivate readonly validator: BaseValidator<T>;\n\n\tpublic constructor(validator: BaseValidator<T>, constraints: readonly IConstraint<Set<T>>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.validator = validator;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.constraints]);\n\t}\n\n\tprotected handle(values: unknown): Result<Set<T>, ValidationError | CombinedError> {\n\t\tif (!(values instanceof Set)) {\n\t\t\treturn Result.err(new ValidationError('s.set(T)', 'Expected a set', values));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(values);\n\t\t}\n\n\t\tconst errors: BaseError[] = [];\n\t\tconst transformed = new Set<T>();\n\n\t\tfor (const value of values) {\n\t\t\tconst result = this.validator.run(value);\n\t\t\tif (result.isOk()) transformed.add(result.value);\n\t\t\telse errors.push(result.error!);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedError(errors));\n\t}\n}\n","/**\n * [RFC-5322](https://datatracker.ietf.org/doc/html/rfc5322)\n * compliant {@link RegExp} to validate an email address\n *\n * @see https://stackoverflow.com/questions/201323/how-can-i-validate-an-email-address-using-a-regular-expression/201378#201378\n */\nconst accountRegex =\n\t/^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")$/;\n\n/**\n * Validates an email address string based on various checks:\n * - It must be a non nullish and non empty string\n * - It must include at least an `@` symbol`\n * - The account name may not exceed 64 characters\n * - The domain name may not exceed 255 characters\n * - The domain must include at least one `.` symbol\n * - Each part of the domain, split by `.` must not exceed 63 characters\n * - The email address must be [RFC-5322](https://datatracker.ietf.org/doc/html/rfc5322) compliant\n * @param email The email to validate\n * @returns `true` if the email is valid, `false` otherwise\n *\n * @remark Based on the following sources:\n * - `email-validator` by [manisharaan](https://github.com/manishsaraan) ([code](https://github.com/manishsaraan/email-validator/blob/master/index.js))\n * - [Comparing E-mail Address Validating Regular Expressions](http://fightingforalostcause.net/misc/2006/compare-email-regex.php)\n * - [Validating Email Addresses by Derrick Pallas](http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx)\n * - [StackOverflow answer by bortzmeyer](http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378)\n * - [The wikipedia page on Email addresses](https://en.wikipedia.org/wiki/Email_address)\n */\nexport function validateEmail(email: string): boolean {\n\t// 1. Non-nullish and non-empty string check.\n\t//\n\t// If a nullish or empty email was provided then do an early exit\n\tif (!email) return false;\n\n\t// Find the location of the @ symbol:\n\tconst atIndex = email.indexOf('@');\n\n\t// 2. @ presence check.\n\t//\n\t// If the email does not have the @ symbol, it's automatically invalid:\n\tif (atIndex === -1) return false;\n\n\t// 3. <account> maximum length check.\n\t//\n\t// From <account>@<domain>, if <account> exceeds 64 characters, then the\n\t// position of the @ symbol is 64 or greater. In this case, the email is\n\t// invalid:\n\tif (atIndex > 64) return false;\n\n\tconst domainIndex = atIndex + 1;\n\n\t// 7.1. Duplicated @ symbol check.\n\t//\n\t// If there's a second @ symbol, the email is automatically invalid:\n\tif (email.includes('@', domainIndex)) return false;\n\n\t// 4. <domain> maximum length check.\n\t//\n\t// From <account>@<domain>, if <domain> exceeds 255 characters, then it\n\t// means that the amount of characters between the start of <domain> and the\n\t// end of the string is separated by 255 or more characters.\n\tif (email.length - domainIndex > 255) return false;\n\n\t// Find the location of the . symbol in <domain>:\n\tlet dotIndex = email.indexOf('.', domainIndex);\n\n\t// 5. <domain> dot (.) symbol check.\n\t//\n\t// From <account>@<domain>, if <domain> does not contain a dot (.) symbol,\n\t// then it means the domain is invalid.\n\tif (dotIndex === -1) return false;\n\n\t// 6. <domain> parts length.\n\t//\n\t// Assign a temporary variable to store the start of the last read domain\n\t// part, this would be at the start of <domain>.\n\t//\n\t// For a <domain> part to be correct, it must have at most, 63 characters.\n\t// We repeat this step for every sub-section of <domain> contained within\n\t// dot (.) symbols.\n\t//\n\t// The following step is a more optimized version of the following code:\n\t//\n\t// ```javascript\n\t// domain.split('.').some((part) => part.length > 63);\n\t// ```\n\tlet lastDotIndex = domainIndex;\n\tdo {\n\t\tif (dotIndex - lastDotIndex > 63) return false;\n\n\t\tlastDotIndex = dotIndex + 1;\n\t} while ((dotIndex = email.indexOf('.', lastDotIndex)) !== -1);\n\n\t// The loop iterates from the first to the n - 1 part, this line checks for\n\t// the last (n) part:\n\tif (email.length - lastDotIndex > 63) return false;\n\n\t// 7.2. Character checks.\n\t//\n\t// From <account>@<domain>:\n\t// - Extract the <account> part by slicing the input from start to the @\n\t//   character. Validate afterwards.\n\t// - Extract the <domain> part by slicing the input from the start of\n\t//   <domain>. Validate afterwards.\n\t//\n\t// Note: we inline the variables so <domain> isn't created unless the\n\t//       <account> check passes.\n\treturn accountRegex.test(email.slice(0, atIndex)) && validateEmailDomain(email.slice(domainIndex));\n}\n\nfunction validateEmailDomain(domain: string): boolean {\n\ttry {\n\t\treturn new URL(`http://${domain}`).hostname === domain;\n\t} catch {\n\t\treturn false;\n\t}\n}\n","/**\n * Code ported from https://github.com/nodejs/node/blob/5fad0b93667ffc6e4def52996b9529ac99b26319/lib/internal/net.js\n */\n\n// IPv4 Segment\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\n\n// IPv6 Segment\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})';\nconst IPv6Reg = new RegExp(\n\t'^(' +\n\t\t`(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n\t\t`(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n\t\t`(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\n\t\t`(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\n\t\t`(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\n\t\t`(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\n\t\t`(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\n\t\t`(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\n\t\t')(%[0-9a-zA-Z-.:]{1,})?$'\n);\n\nexport function isIPv4(s: string): boolean {\n\treturn IPv4Reg.test(s);\n}\n\nexport function isIPv6(s: string): boolean {\n\treturn IPv6Reg.test(s);\n}\n\nexport function isIP(s: string): number {\n\tif (isIPv4(s)) return 4;\n\tif (isIPv6(s)) return 6;\n\treturn 0;\n}\n","import { inspect, type InspectOptionsStylized } from 'node:util';\nimport { customInspectSymbolStackLess } from './BaseError';\nimport { BaseConstraintError, type ConstraintErrorNames } from './BaseConstraintError';\n\nexport class MultiplePossibilitiesConstraintError<T = unknown> extends BaseConstraintError<T> {\n\tpublic readonly expected: readonly string[];\n\n\tpublic constructor(constraint: ConstraintErrorNames, message: string, given: T, expected: readonly string[]) {\n\t\tsuper(constraint, message, given);\n\t\tthis.expected = expected;\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tconstraint: this.constraint,\n\t\t\tgiven: this.given,\n\t\t\texpected: this.expected\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst constraint = options.stylize(this.constraint, 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[MultiplePossibilitiesConstraintError: ${constraint}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1 };\n\n\t\tconst verticalLine = options.stylize('|', 'undefined');\n\t\tconst padding = `\\n  ${verticalLine} `;\n\t\tconst given = inspect(this.given, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('MultiplePossibilitiesConstraintError', 'special')} > ${constraint}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\n\t\tconst expectedPadding = `\\n  ${verticalLine} - `;\n\t\tconst expectedBlock = `\\n  ${options.stylize('Expected any of the following:', 'string')}${expectedPadding}${this.expected\n\t\t\t.map((possible) => options.stylize(possible, 'boolean'))\n\t\t\t.join(expectedPadding)}`;\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${expectedBlock}\\n${givenBlock}`;\n\t}\n}\n","export function combinedErrorFn<P extends [...any], E extends Error>(...fns: ErrorFn<P, E>[]): ErrorFn<P, E> {\n\tswitch (fns.length) {\n\t\tcase 0:\n\t\t\treturn () => null;\n\t\tcase 1:\n\t\t\treturn fns[0];\n\t\tcase 2: {\n\t\t\tconst [fn0, fn1] = fns;\n\t\t\treturn (...params) => fn0(...params) || fn1(...params);\n\t\t}\n\t\tdefault: {\n\t\t\treturn (...params) => {\n\t\t\t\tfor (const fn of fns) {\n\t\t\t\t\tconst result = fn(...params);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport type ErrorFn<P extends [...any], E extends Error> = (...params: P) => E | null;\n","import { MultiplePossibilitiesConstraintError } from '../../lib/errors/MultiplePossibilitiesConstraintError';\nimport { combinedErrorFn, ErrorFn } from './common/combinedResultFn';\n\nexport type StringProtocol = `${string}:`;\n\nexport type StringDomain = `${string}.${string}`;\n\nexport interface UrlOptions {\n\tallowedProtocols?: StringProtocol[];\n\tallowedDomains?: StringDomain[];\n}\n\nexport function createUrlValidators(options?: UrlOptions) {\n\tconst fns: ErrorFn<[input: string, url: URL], MultiplePossibilitiesConstraintError<string>>[] = [];\n\n\tif (options?.allowedProtocols?.length) fns.push(allowedProtocolsFn(options.allowedProtocols));\n\tif (options?.allowedDomains?.length) fns.push(allowedDomainsFn(options.allowedDomains));\n\n\treturn combinedErrorFn(...fns);\n}\n\nfunction allowedProtocolsFn(allowedProtocols: StringProtocol[]) {\n\treturn (input: string, url: URL) =>\n\t\tallowedProtocols.includes(url.protocol as StringProtocol)\n\t\t\t? null\n\t\t\t: new MultiplePossibilitiesConstraintError('s.string.url', 'Invalid URL protocol', input, allowedProtocols);\n}\n\nfunction allowedDomainsFn(allowedDomains: StringDomain[]) {\n\treturn (input: string, url: URL) =>\n\t\tallowedDomains.includes(url.hostname as StringDomain)\n\t\t\t? null\n\t\t\t: new MultiplePossibilitiesConstraintError('s.string.url', 'Invalid URL domain', input, allowedDomains);\n}\n","import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { IConstraint } from './base/IConstraint';\nimport { validateEmail } from './util/emailValidator';\nimport { isIP, isIPv4, isIPv6 } from './util/net';\nimport { Comparator, equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual } from './util/operators';\nimport { createUrlValidators } from './util/urlValidators';\n\nexport type StringConstraintName =\n\t| `s.string.${\n\t\t\t| `length${'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual' | 'Equal' | 'NotEqual'}`\n\t\t\t| 'regex'\n\t\t\t| 'url'\n\t\t\t| 'uuid'\n\t\t\t| 'email'\n\t\t\t| `ip${'v4' | 'v6' | ''}`\n\t\t\t| 'date'}`;\n\nexport type StringProtocol = `${string}:`;\n\nexport type StringDomain = `${string}.${string}`;\n\nexport interface UrlOptions {\n\tallowedProtocols?: StringProtocol[];\n\tallowedDomains?: StringDomain[];\n}\n\nexport type UUIDVersion = 1 | 3 | 4 | 5;\n\nexport interface StringUuidOptions {\n\tversion?: UUIDVersion | `${UUIDVersion}-${UUIDVersion}` | null;\n\tnullable?: boolean;\n}\n\nfunction stringLengthComparator(comparator: Comparator, name: StringConstraintName, expected: string, length: number): IConstraint<string> {\n\treturn {\n\t\trun(input: string) {\n\t\t\treturn comparator(input.length, length) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, 'Invalid string length', input, expected));\n\t\t}\n\t};\n}\n\nexport function stringLengthLessThan(length: number): IConstraint<string> {\n\tconst expected = `expected.length < ${length}`;\n\treturn stringLengthComparator(lessThan, 's.string.lengthLessThan', expected, length);\n}\n\nexport function stringLengthLessThanOrEqual(length: number): IConstraint<string> {\n\tconst expected = `expected.length <= ${length}`;\n\treturn stringLengthComparator(lessThanOrEqual, 's.string.lengthLessThanOrEqual', expected, length);\n}\n\nexport function stringLengthGreaterThan(length: number): IConstraint<string> {\n\tconst expected = `expected.length > ${length}`;\n\treturn stringLengthComparator(greaterThan, 's.string.lengthGreaterThan', expected, length);\n}\n\nexport function stringLengthGreaterThanOrEqual(length: number): IConstraint<string> {\n\tconst expected = `expected.length >= ${length}`;\n\treturn stringLengthComparator(greaterThanOrEqual, 's.string.lengthGreaterThanOrEqual', expected, length);\n}\n\nexport function stringLengthEqual(length: number): IConstraint<string> {\n\tconst expected = `expected.length === ${length}`;\n\treturn stringLengthComparator(equal, 's.string.lengthEqual', expected, length);\n}\n\nexport function stringLengthNotEqual(length: number): IConstraint<string> {\n\tconst expected = `expected.length !== ${length}`;\n\treturn stringLengthComparator(notEqual, 's.string.lengthNotEqual', expected, length);\n}\n\nexport function stringEmail(): IConstraint<string> {\n\treturn {\n\t\trun(input: string) {\n\t\t\treturn validateEmail(input)\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.string.email', 'Invalid email address', input, 'expected to be an email address'));\n\t\t}\n\t};\n}\n\nfunction stringRegexValidator(type: StringConstraintName, expected: string, regex: RegExp): IConstraint<string> {\n\treturn {\n\t\trun(input: string) {\n\t\t\treturn regex.test(input) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(type, 'Invalid string format', input, expected));\n\t\t}\n\t};\n}\n\nexport function stringUrl(options?: UrlOptions): IConstraint<string> {\n\tconst validatorFn = createUrlValidators(options);\n\treturn {\n\t\trun(input: string) {\n\t\t\tlet url: URL;\n\t\t\ttry {\n\t\t\t\turl = new URL(input);\n\t\t\t} catch {\n\t\t\t\treturn Result.err(new ExpectedConstraintError('s.string.url', 'Invalid URL', input, 'expected to match an URL'));\n\t\t\t}\n\n\t\t\tconst validatorFnResult = validatorFn(input, url);\n\t\t\tif (validatorFnResult === null) return Result.ok(input);\n\t\t\treturn Result.err(validatorFnResult);\n\t\t}\n\t};\n}\n\nexport function stringIp(version?: 4 | 6): IConstraint<string> {\n\tconst ipVersion = version ? (`v${version}` as const) : '';\n\tconst validatorFn = version === 4 ? isIPv4 : version === 6 ? isIPv6 : isIP;\n\n\tconst name = `s.string.ip${ipVersion}` as const;\n\tconst message = `Invalid IP${ipVersion} address`;\n\tconst expected = `expected to be an IP${ipVersion} address`;\n\treturn {\n\t\trun(input: string) {\n\t\t\treturn validatorFn(input) ? Result.ok(input) : Result.err(new ExpectedConstraintError(name, message, input, expected));\n\t\t}\n\t};\n}\n\nexport function stringRegex(regex: RegExp) {\n\treturn stringRegexValidator('s.string.regex', `expected ${regex}.test(expected) to be true`, regex);\n}\n\nexport function stringUuid({ version = 4, nullable = false }: StringUuidOptions = {}) {\n\tversion ??= '1-5';\n\tconst regex = new RegExp(\n\t\t`^(?:[0-9A-F]{8}-[0-9A-F]{4}-[${version}][0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}${\n\t\t\tnullable ? '|00000000-0000-0000-0000-000000000000' : ''\n\t\t})$`,\n\t\t'i'\n\t);\n\tconst expected = `expected to match UUID${typeof version === 'number' ? `v${version}` : ` in range of ${version}`}`;\n\treturn stringRegexValidator('s.string.uuid', expected, regex);\n}\n\nexport function stringDate(): IConstraint<string> {\n\treturn {\n\t\trun(input: string) {\n\t\t\tconst time = Date.parse(input);\n\n\t\t\treturn Number.isNaN(time)\n\t\t\t\t? Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.string.date',\n\t\t\t\t\t\t\t'Invalid date string',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t'expected to be a valid date string (in the ISO 8601 or ECMA-262 format)'\n\t\t\t\t\t\t)\n\t\t\t\t  )\n\t\t\t\t: Result.ok(input);\n\t\t}\n\t};\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport {\n\tstringDate,\n\tstringEmail,\n\tstringIp,\n\tstringLengthEqual,\n\tstringLengthGreaterThan,\n\tstringLengthGreaterThanOrEqual,\n\tstringLengthLessThan,\n\tstringLengthLessThanOrEqual,\n\tstringLengthNotEqual,\n\tstringRegex,\n\tstringUrl,\n\tstringUuid,\n\tStringUuidOptions,\n\ttype UrlOptions\n} from '../constraints/StringConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class StringValidator<T extends string> extends BaseValidator<T> {\n\tpublic lengthLessThan(length: number): this {\n\t\treturn this.addConstraint(stringLengthLessThan(length) as IConstraint<T>);\n\t}\n\n\tpublic lengthLessThanOrEqual(length: number): this {\n\t\treturn this.addConstraint(stringLengthLessThanOrEqual(length) as IConstraint<T>);\n\t}\n\n\tpublic lengthGreaterThan(length: number): this {\n\t\treturn this.addConstraint(stringLengthGreaterThan(length) as IConstraint<T>);\n\t}\n\n\tpublic lengthGreaterThanOrEqual(length: number): this {\n\t\treturn this.addConstraint(stringLengthGreaterThanOrEqual(length) as IConstraint<T>);\n\t}\n\n\tpublic lengthEqual(length: number): this {\n\t\treturn this.addConstraint(stringLengthEqual(length) as IConstraint<T>);\n\t}\n\n\tpublic lengthNotEqual(length: number): this {\n\t\treturn this.addConstraint(stringLengthNotEqual(length) as IConstraint<T>);\n\t}\n\n\tpublic get email(): this {\n\t\treturn this.addConstraint(stringEmail() as IConstraint<T>);\n\t}\n\n\tpublic url(options?: UrlOptions): this {\n\t\treturn this.addConstraint(stringUrl(options) as IConstraint<T>);\n\t}\n\n\tpublic uuid(options?: StringUuidOptions): this {\n\t\treturn this.addConstraint(stringUuid(options) as IConstraint<T>);\n\t}\n\n\tpublic regex(regex: RegExp): this {\n\t\treturn this.addConstraint(stringRegex(regex) as IConstraint<T>);\n\t}\n\n\tpublic get date() {\n\t\treturn this.addConstraint(stringDate() as IConstraint<T>);\n\t}\n\n\tpublic get ipv4(): this {\n\t\treturn this.ip(4);\n\t}\n\n\tpublic get ipv6(): this {\n\t\treturn this.ip(6);\n\t}\n\n\tpublic ip(version?: 4 | 6): this {\n\t\treturn this.addConstraint(stringIp(version) as IConstraint<T>);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn typeof value === 'string' //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.string', 'Expected a string primitive', value));\n\t}\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class TupleValidator<T extends any[]> extends BaseValidator<[...T]> {\n\tprivate readonly validators: BaseValidator<[...T]>[] = [];\n\n\tpublic constructor(validators: BaseValidator<[...T]>[], constraints: readonly IConstraint<[...T]>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.validators = validators;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validators, this.constraints]);\n\t}\n\n\tprotected handle(values: unknown): Result<[...T], ValidationError | CombinedPropertyError> {\n\t\tif (!Array.isArray(values)) {\n\t\t\treturn Result.err(new ValidationError('s.tuple(T)', 'Expected an array', values));\n\t\t}\n\n\t\tif (values.length !== this.validators.length) {\n\t\t\treturn Result.err(new ValidationError('s.tuple(T)', `Expected an array of length ${this.validators.length}`, values));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(values as [...T]);\n\t\t}\n\n\t\tconst errors: [number, BaseError][] = [];\n\t\tconst transformed: T = [] as unknown as T;\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst result = this.validators[i].run(values[i]);\n\t\t\tif (result.isOk()) transformed.push(result.value);\n\t\t\telse errors.push([i, result.error!]);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedPropertyError(errors));\n\t}\n}\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class MapValidator<K, V> extends BaseValidator<Map<K, V>> {\n\tprivate readonly keyValidator: BaseValidator<K>;\n\tprivate readonly valueValidator: BaseValidator<V>;\n\n\tpublic constructor(keyValidator: BaseValidator<K>, valueValidator: BaseValidator<V>, constraints: readonly IConstraint<Map<K, V>>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.keyValidator = keyValidator;\n\t\tthis.valueValidator = valueValidator;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.keyValidator, this.valueValidator, this.constraints]);\n\t}\n\n\tprotected handle(value: unknown): Result<Map<K, V>, ValidationError | CombinedPropertyError> {\n\t\tif (!(value instanceof Map)) {\n\t\t\treturn Result.err(new ValidationError('s.map(K, V)', 'Expected a map', value));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(value);\n\t\t}\n\n\t\tconst errors: [string, BaseError][] = [];\n\t\tconst transformed = new Map<K, V>();\n\n\t\tfor (const [key, val] of value.entries()) {\n\t\t\tconst keyResult = this.keyValidator.run(key);\n\t\t\tconst valueResult = this.valueValidator.run(val);\n\t\t\tconst { length } = errors;\n\t\t\tif (keyResult.isErr()) errors.push([key, keyResult.error]);\n\t\t\tif (valueResult.isErr()) errors.push([key, valueResult.error]);\n\t\t\tif (errors.length === length) transformed.set(keyResult.value!, valueResult.value!);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedPropertyError(errors));\n\t}\n}\n","import type { Result } from '../lib/Result';\nimport type { IConstraint, Unwrap } from '../type-exports';\nimport { BaseValidator, ValidatorError } from './imports';\n\nexport class LazyValidator<T extends BaseValidator<unknown>, R = Unwrap<T>> extends BaseValidator<R> {\n\tprivate readonly validator: (value: unknown) => T;\n\n\tpublic constructor(validator: (value: unknown) => T, constraints: readonly IConstraint<R>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.validator = validator;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.constraints]);\n\t}\n\n\tprotected handle(values: unknown): Result<R, ValidatorError> {\n\t\treturn this.validator(values).run(values) as Result<R, ValidatorError>;\n\t}\n}\n","import type { InspectOptionsStylized } from 'node:util';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\n\nexport class UnknownEnumValueError extends BaseError {\n\tpublic readonly value: string | number;\n\tpublic readonly enumKeys: string[];\n\tpublic readonly enumMappings: Map<string | number, string | number>;\n\n\tpublic constructor(value: string | number, keys: string[], enumMappings: Map<string | number, string | number>) {\n\t\tsuper('Expected the value to be one of the following enum values:');\n\n\t\tthis.value = value;\n\t\tthis.enumKeys = keys;\n\t\tthis.enumMappings = enumMappings;\n\t}\n\n\tpublic toJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tvalue: this.value,\n\t\t\tenumKeys: this.enumKeys,\n\t\t\tenumMappings: [...this.enumMappings.entries()]\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst value = options.stylize(this.value.toString(), 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[UnknownEnumValueError: ${value}]`, 'special');\n\t\t}\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst pairs = this.enumKeys\n\t\t\t.map((key) => {\n\t\t\t\tconst enumValue = this.enumMappings.get(key)!;\n\t\t\t\treturn `${options.stylize(key, 'string')} or ${options.stylize(\n\t\t\t\t\tenumValue.toString(),\n\t\t\t\t\ttypeof enumValue === 'number' ? 'number' : 'string'\n\t\t\t\t)}`;\n\t\t\t})\n\t\t\t.join(padding);\n\n\t\tconst header = `${options.stylize('UnknownEnumValueError', 'special')} > ${value}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst pairsBlock = `${padding}${pairs}`;\n\t\treturn `${header}\\n  ${message}\\n${pairsBlock}`;\n\t}\n}\n","import { UnknownEnumValueError } from '../lib/errors/UnknownEnumValueError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class NativeEnumValidator<T extends NativeEnumLike> extends BaseValidator<T[keyof T]> {\n\tpublic readonly enumShape: T;\n\tpublic readonly hasNumericElements: boolean = false;\n\tprivate readonly enumKeys: string[];\n\tprivate readonly enumMapping = new Map<string | number, T[keyof T]>();\n\n\tpublic constructor(enumShape: T) {\n\t\tsuper();\n\t\tthis.enumShape = enumShape;\n\n\t\tthis.enumKeys = Object.keys(enumShape).filter((key) => {\n\t\t\treturn typeof enumShape[enumShape[key]] !== 'number';\n\t\t});\n\n\t\tfor (const key of this.enumKeys) {\n\t\t\tconst enumValue = enumShape[key] as T[keyof T];\n\n\t\t\tthis.enumMapping.set(key, enumValue);\n\t\t\tthis.enumMapping.set(enumValue, enumValue);\n\n\t\t\tif (typeof enumValue === 'number') {\n\t\t\t\tthis.hasNumericElements = true;\n\t\t\t\tthis.enumMapping.set(`${enumValue}`, enumValue);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override handle(value: unknown): Result<T[keyof T], ValidationError | UnknownEnumValueError> {\n\t\tconst typeOfValue = typeof value;\n\n\t\tif (typeOfValue === 'number') {\n\t\t\tif (!this.hasNumericElements) {\n\t\t\t\treturn Result.err(new ValidationError('s.nativeEnum(T)', 'Expected the value to be a string', value));\n\t\t\t}\n\t\t} else if (typeOfValue !== 'string') {\n\t\t\t// typeOfValue !== 'number' is implied here\n\t\t\treturn Result.err(new ValidationError('s.nativeEnum(T)', 'Expected the value to be a string or number', value));\n\t\t}\n\n\t\tconst casted = value as string | number;\n\n\t\tconst possibleEnumValue = this.enumMapping.get(casted);\n\n\t\treturn typeof possibleEnumValue === 'undefined'\n\t\t\t? Result.err(new UnknownEnumValueError(casted, this.enumKeys, this.enumMapping))\n\t\t\t: Result.ok(possibleEnumValue);\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.enumShape]);\n\t}\n}\n\nexport interface NativeEnumLike {\n\t[key: string]: string | number;\n\t[key: number]: string;\n}\n","import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { IConstraint } from './base/IConstraint';\nimport { Comparator, equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual } from './util/operators';\nimport type { TypedArray } from './util/typedArray';\n\nexport type TypedArrayConstraintName = `s.typedArray(T).${'byteLength' | 'length'}${\n\t| 'LessThan'\n\t| 'LessThanOrEqual'\n\t| 'GreaterThan'\n\t| 'GreaterThanOrEqual'\n\t| 'Equal'\n\t| 'NotEqual'\n\t| 'Range'\n\t| 'RangeInclusive'\n\t| 'RangeExclusive'}`;\n\nfunction typedArrayByteLengthComparator<T extends TypedArray>(\n\tcomparator: Comparator,\n\tname: TypedArrayConstraintName,\n\texpected: string,\n\tlength: number\n): IConstraint<T> {\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn comparator(input.byteLength, length) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, 'Invalid Typed Array byte length', input, expected));\n\t\t}\n\t};\n}\n\nexport function typedArrayByteLengthLessThan<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.byteLength < ${value}`;\n\treturn typedArrayByteLengthComparator(lessThan, 's.typedArray(T).byteLengthLessThan', expected, value);\n}\n\nexport function typedArrayByteLengthLessThanOrEqual<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.byteLength <= ${value}`;\n\treturn typedArrayByteLengthComparator(lessThanOrEqual, 's.typedArray(T).byteLengthLessThanOrEqual', expected, value);\n}\n\nexport function typedArrayByteLengthGreaterThan<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.byteLength > ${value}`;\n\treturn typedArrayByteLengthComparator(greaterThan, 's.typedArray(T).byteLengthGreaterThan', expected, value);\n}\n\nexport function typedArrayByteLengthGreaterThanOrEqual<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.byteLength >= ${value}`;\n\treturn typedArrayByteLengthComparator(greaterThanOrEqual, 's.typedArray(T).byteLengthGreaterThanOrEqual', expected, value);\n}\n\nexport function typedArrayByteLengthEqual<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.byteLength === ${value}`;\n\treturn typedArrayByteLengthComparator(equal, 's.typedArray(T).byteLengthEqual', expected, value);\n}\n\nexport function typedArrayByteLengthNotEqual<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.byteLength !== ${value}`;\n\treturn typedArrayByteLengthComparator(notEqual, 's.typedArray(T).byteLengthNotEqual', expected, value);\n}\n\nexport function typedArrayByteLengthRange<T extends TypedArray>(start: number, endBefore: number): IConstraint<T> {\n\tconst expected = `expected.byteLength >= ${start} && expected.byteLength < ${endBefore}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.byteLength >= start && input.byteLength < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.typedArray(T).byteLengthRange', 'Invalid Typed Array byte length', input, expected));\n\t\t}\n\t};\n}\n\nexport function typedArrayByteLengthRangeInclusive<T extends TypedArray>(start: number, end: number) {\n\tconst expected = `expected.byteLength >= ${start} && expected.byteLength <= ${end}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.byteLength >= start && input.byteLength <= end //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError('s.typedArray(T).byteLengthRangeInclusive', 'Invalid Typed Array byte length', input, expected)\n\t\t\t\t  );\n\t\t}\n\t};\n}\n\nexport function typedArrayByteLengthRangeExclusive<T extends TypedArray>(startAfter: number, endBefore: number): IConstraint<T> {\n\tconst expected = `expected.byteLength > ${startAfter} && expected.byteLength < ${endBefore}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.byteLength > startAfter && input.byteLength < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError('s.typedArray(T).byteLengthRangeExclusive', 'Invalid Typed Array byte length', input, expected)\n\t\t\t\t  );\n\t\t}\n\t};\n}\n\nfunction typedArrayLengthComparator<T extends TypedArray>(\n\tcomparator: Comparator,\n\tname: TypedArrayConstraintName,\n\texpected: string,\n\tlength: number\n): IConstraint<T> {\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn comparator(input.length, length) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, 'Invalid Typed Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport function typedArrayLengthLessThan<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.length < ${value}`;\n\treturn typedArrayLengthComparator(lessThan, 's.typedArray(T).lengthLessThan', expected, value);\n}\n\nexport function typedArrayLengthLessThanOrEqual<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.length <= ${value}`;\n\treturn typedArrayLengthComparator(lessThanOrEqual, 's.typedArray(T).lengthLessThanOrEqual', expected, value);\n}\n\nexport function typedArrayLengthGreaterThan<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.length > ${value}`;\n\treturn typedArrayLengthComparator(greaterThan, 's.typedArray(T).lengthGreaterThan', expected, value);\n}\n\nexport function typedArrayLengthGreaterThanOrEqual<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.length >= ${value}`;\n\treturn typedArrayLengthComparator(greaterThanOrEqual, 's.typedArray(T).lengthGreaterThanOrEqual', expected, value);\n}\n\nexport function typedArrayLengthEqual<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.length === ${value}`;\n\treturn typedArrayLengthComparator(equal, 's.typedArray(T).lengthEqual', expected, value);\n}\n\nexport function typedArrayLengthNotEqual<T extends TypedArray>(value: number): IConstraint<T> {\n\tconst expected = `expected.length !== ${value}`;\n\treturn typedArrayLengthComparator(notEqual, 's.typedArray(T).lengthNotEqual', expected, value);\n}\n\nexport function typedArrayLengthRange<T extends TypedArray>(start: number, endBefore: number): IConstraint<T> {\n\tconst expected = `expected.length >= ${start} && expected.length < ${endBefore}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.length >= start && input.length < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.typedArray(T).lengthRange', 'Invalid Typed Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport function typedArrayLengthRangeInclusive<T extends TypedArray>(start: number, end: number): IConstraint<T> {\n\tconst expected = `expected.length >= ${start} && expected.length <= ${end}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.length >= start && input.length <= end //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.typedArray(T).lengthRangeInclusive', 'Invalid Typed Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport function typedArrayLengthRangeExclusive<T extends TypedArray>(startAfter: number, endBefore: number): IConstraint<T> {\n\tconst expected = `expected.length > ${startAfter} && expected.length < ${endBefore}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.length > startAfter && input.length < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.typedArray(T).lengthRangeExclusive', 'Invalid Typed Array length', input, expected));\n\t\t}\n\t};\n}\n","const vowels = ['a', 'e', 'i', 'o', 'u'];\n\nexport const aOrAn = (word: string) => {\n\treturn `${vowels.includes(word[0].toLowerCase()) ? 'an' : 'a'} ${word}`;\n};\n","export type TypedArray =\n\t| Int8Array\n\t| Uint8Array\n\t| Uint8ClampedArray\n\t| Int16Array\n\t| Uint16Array\n\t| Int32Array\n\t| Uint32Array\n\t| Float32Array\n\t| Float64Array\n\t| BigInt64Array\n\t| BigUint64Array;\n\nexport const TypedArrays = {\n\tInt8Array: (x: unknown): x is Int8Array => x instanceof Int8Array,\n\tUint8Array: (x: unknown): x is Uint8Array => x instanceof Uint8Array,\n\tUint8ClampedArray: (x: unknown): x is Uint8ClampedArray => x instanceof Uint8ClampedArray,\n\tInt16Array: (x: unknown): x is Int16Array => x instanceof Int16Array,\n\tUint16Array: (x: unknown): x is Uint16Array => x instanceof Uint16Array,\n\tInt32Array: (x: unknown): x is Int32Array => x instanceof Int32Array,\n\tUint32Array: (x: unknown): x is Uint32Array => x instanceof Uint32Array,\n\tFloat32Array: (x: unknown): x is Float32Array => x instanceof Float32Array,\n\tFloat64Array: (x: unknown): x is Float64Array => x instanceof Float64Array,\n\tBigInt64Array: (x: unknown): x is BigInt64Array => x instanceof BigInt64Array,\n\tBigUint64Array: (x: unknown): x is BigUint64Array => x instanceof BigUint64Array,\n\tTypedArray: (x: unknown): x is TypedArray => ArrayBuffer.isView(x) && !(x instanceof DataView)\n} as const;\n\nexport type TypedArrayName = keyof typeof TypedArrays;\n","import type { IConstraint } from '../constraints/base/IConstraint';\nimport {\n\ttypedArrayByteLengthEqual,\n\ttypedArrayByteLengthGreaterThan,\n\ttypedArrayByteLengthGreaterThanOrEqual,\n\ttypedArrayByteLengthLessThan,\n\ttypedArrayByteLengthLessThanOrEqual,\n\ttypedArrayByteLengthNotEqual,\n\ttypedArrayByteLengthRange,\n\ttypedArrayByteLengthRangeExclusive,\n\ttypedArrayByteLengthRangeInclusive,\n\ttypedArrayLengthEqual,\n\ttypedArrayLengthGreaterThan,\n\ttypedArrayLengthGreaterThanOrEqual,\n\ttypedArrayLengthLessThan,\n\ttypedArrayLengthLessThanOrEqual,\n\ttypedArrayLengthNotEqual,\n\ttypedArrayLengthRange,\n\ttypedArrayLengthRangeExclusive,\n\ttypedArrayLengthRangeInclusive\n} from '../constraints/TypedArrayLengthConstraints';\nimport { aOrAn } from '../constraints/util/common/vowels';\nimport { TypedArray, TypedArrayName, TypedArrays } from '../constraints/util/typedArray';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class TypedArrayValidator<T extends TypedArray> extends BaseValidator<T> {\n\tprivate readonly type: TypedArrayName;\n\n\tpublic constructor(type: TypedArrayName, constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(constraints);\n\t\tthis.type = type;\n\t}\n\n\tpublic byteLengthLessThan(length: number) {\n\t\treturn this.addConstraint(typedArrayByteLengthLessThan(length));\n\t}\n\n\tpublic byteLengthLessThanOrEqual(length: number) {\n\t\treturn this.addConstraint(typedArrayByteLengthLessThanOrEqual(length));\n\t}\n\n\tpublic byteLengthGreaterThan(length: number) {\n\t\treturn this.addConstraint(typedArrayByteLengthGreaterThan(length));\n\t}\n\n\tpublic byteLengthGreaterThanOrEqual(length: number) {\n\t\treturn this.addConstraint(typedArrayByteLengthGreaterThanOrEqual(length));\n\t}\n\n\tpublic byteLengthEqual(length: number) {\n\t\treturn this.addConstraint(typedArrayByteLengthEqual(length));\n\t}\n\n\tpublic byteLengthNotEqual(length: number) {\n\t\treturn this.addConstraint(typedArrayByteLengthNotEqual(length));\n\t}\n\n\tpublic byteLengthRange(start: number, endBefore: number) {\n\t\treturn this.addConstraint(typedArrayByteLengthRange(start, endBefore));\n\t}\n\n\tpublic byteLengthRangeInclusive(startAt: number, endAt: number) {\n\t\treturn this.addConstraint(typedArrayByteLengthRangeInclusive(startAt, endAt) as IConstraint<T>);\n\t}\n\n\tpublic byteLengthRangeExclusive(startAfter: number, endBefore: number) {\n\t\treturn this.addConstraint(typedArrayByteLengthRangeExclusive(startAfter, endBefore));\n\t}\n\n\tpublic lengthLessThan(length: number) {\n\t\treturn this.addConstraint(typedArrayLengthLessThan(length));\n\t}\n\n\tpublic lengthLessThanOrEqual(length: number) {\n\t\treturn this.addConstraint(typedArrayLengthLessThanOrEqual(length));\n\t}\n\n\tpublic lengthGreaterThan(length: number) {\n\t\treturn this.addConstraint(typedArrayLengthGreaterThan(length));\n\t}\n\n\tpublic lengthGreaterThanOrEqual(length: number) {\n\t\treturn this.addConstraint(typedArrayLengthGreaterThanOrEqual(length));\n\t}\n\n\tpublic lengthEqual(length: number) {\n\t\treturn this.addConstraint(typedArrayLengthEqual(length));\n\t}\n\n\tpublic lengthNotEqual(length: number) {\n\t\treturn this.addConstraint(typedArrayLengthNotEqual(length));\n\t}\n\n\tpublic lengthRange(start: number, endBefore: number) {\n\t\treturn this.addConstraint(typedArrayLengthRange(start, endBefore));\n\t}\n\n\tpublic lengthRangeInclusive(startAt: number, endAt: number) {\n\t\treturn this.addConstraint(typedArrayLengthRangeInclusive(startAt, endAt));\n\t}\n\n\tpublic lengthRangeExclusive(startAfter: number, endBefore: number) {\n\t\treturn this.addConstraint(typedArrayLengthRangeExclusive(startAfter, endBefore));\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.type, this.constraints]);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn TypedArrays[this.type](value)\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.typedArray', `Expected ${aOrAn(this.type)}`, value));\n\t}\n}\n","import type { TypedArray, TypedArrayName } from '../constraints/util/typedArray';\nimport type { Unwrap, UnwrapTuple } from '../lib/util-types';\nimport {\n\tArrayValidator,\n\tBaseValidator,\n\tBigIntValidator,\n\tBooleanValidator,\n\tDateValidator,\n\tInstanceValidator,\n\tLiteralValidator,\n\tMapValidator,\n\tNeverValidator,\n\tNullishValidator,\n\tNumberValidator,\n\tObjectValidator,\n\tPassthroughValidator,\n\tRecordValidator,\n\tSetValidator,\n\tStringValidator,\n\tTupleValidator,\n\tUnionValidator\n} from '../validators/imports';\nimport { LazyValidator } from '../validators/LazyValidator';\nimport { NativeEnumLike, NativeEnumValidator } from '../validators/NativeEnumValidator';\nimport { TypedArrayValidator } from '../validators/TypedArrayValidator';\nimport type { Constructor, MappedObjectValidator } from './util-types';\n\nexport class Shapes {\n\tpublic get string() {\n\t\treturn new StringValidator();\n\t}\n\n\tpublic get number() {\n\t\treturn new NumberValidator();\n\t}\n\n\tpublic get bigint() {\n\t\treturn new BigIntValidator();\n\t}\n\n\tpublic get boolean() {\n\t\treturn new BooleanValidator();\n\t}\n\n\tpublic get date() {\n\t\treturn new DateValidator();\n\t}\n\n\tpublic object<T>(shape: MappedObjectValidator<T>) {\n\t\treturn new ObjectValidator(shape);\n\t}\n\n\tpublic get undefined() {\n\t\treturn this.literal(undefined);\n\t}\n\n\tpublic get null() {\n\t\treturn this.literal(null);\n\t}\n\n\tpublic get nullish() {\n\t\treturn new NullishValidator();\n\t}\n\n\tpublic get any() {\n\t\treturn new PassthroughValidator<any>();\n\t}\n\n\tpublic get unknown() {\n\t\treturn new PassthroughValidator<unknown>();\n\t}\n\n\tpublic get never() {\n\t\treturn new NeverValidator();\n\t}\n\n\tpublic enum<T>(...values: readonly T[]) {\n\t\treturn this.union(...values.map((value) => this.literal(value)));\n\t}\n\n\tpublic nativeEnum<T extends NativeEnumLike>(enumShape: T): NativeEnumValidator<T> {\n\t\treturn new NativeEnumValidator(enumShape);\n\t}\n\n\tpublic literal<T>(value: T): BaseValidator<T> {\n\t\tif (value instanceof Date) return this.date.equal(value) as unknown as BaseValidator<T>;\n\t\treturn new LiteralValidator(value);\n\t}\n\n\tpublic instance<T>(expected: Constructor<T>): InstanceValidator<T> {\n\t\treturn new InstanceValidator(expected);\n\t}\n\n\tpublic union<T extends [...BaseValidator<any>[]]>(...validators: [...T]): UnionValidator<Unwrap<T[number]>> {\n\t\treturn new UnionValidator(validators);\n\t}\n\n\tpublic array<T>(validator: BaseValidator<T[][number]>): ArrayValidator<T[], T[][number]>;\n\tpublic array<T extends unknown[]>(validator: BaseValidator<T[number]>): ArrayValidator<T, T[number]>;\n\tpublic array<T extends unknown[]>(validator: BaseValidator<T[number]>) {\n\t\treturn new ArrayValidator(validator);\n\t}\n\n\tpublic typedArray<T extends TypedArray>(type: TypedArrayName = 'TypedArray') {\n\t\treturn new TypedArrayValidator<T>(type);\n\t}\n\n\tpublic get int8Array() {\n\t\treturn this.typedArray<Int8Array>('Int8Array');\n\t}\n\n\tpublic get uint8Array() {\n\t\treturn this.typedArray<Uint8Array>('Uint8Array');\n\t}\n\n\tpublic get uint8ClampedArray() {\n\t\treturn this.typedArray<Uint8ClampedArray>('Uint8ClampedArray');\n\t}\n\n\tpublic get int16Array() {\n\t\treturn this.typedArray<Int16Array>('Int16Array');\n\t}\n\n\tpublic get uint16Array() {\n\t\treturn this.typedArray<Uint16Array>('Uint16Array');\n\t}\n\n\tpublic get int32Array() {\n\t\treturn this.typedArray<Int32Array>('Int32Array');\n\t}\n\n\tpublic get uint32Array() {\n\t\treturn this.typedArray<Uint32Array>('Uint32Array');\n\t}\n\n\tpublic get float32Array() {\n\t\treturn this.typedArray<Float32Array>('Float32Array');\n\t}\n\n\tpublic get float64Array() {\n\t\treturn this.typedArray<Float64Array>('Float64Array');\n\t}\n\n\tpublic get bigInt64Array() {\n\t\treturn this.typedArray<BigInt64Array>('BigInt64Array');\n\t}\n\n\tpublic get bigUint64Array() {\n\t\treturn this.typedArray<BigUint64Array>('BigUint64Array');\n\t}\n\n\tpublic tuple<T extends [...BaseValidator<any>[]]>(validators: [...T]): TupleValidator<UnwrapTuple<T>> {\n\t\treturn new TupleValidator(validators);\n\t}\n\n\tpublic set<T>(validator: BaseValidator<T>) {\n\t\treturn new SetValidator(validator);\n\t}\n\n\tpublic record<T>(validator: BaseValidator<T>) {\n\t\treturn new RecordValidator(validator);\n\t}\n\n\tpublic map<T, U>(keyValidator: BaseValidator<T>, valueValidator: BaseValidator<U>) {\n\t\treturn new MapValidator(keyValidator, valueValidator);\n\t}\n\n\tpublic lazy<T extends BaseValidator<unknown>>(validator: (value: unknown) => T) {\n\t\treturn new LazyValidator(validator);\n\t}\n}\n"],"mappings":"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","names":[]}