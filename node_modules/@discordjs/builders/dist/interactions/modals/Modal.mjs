import { titleValidator, validateRequiredParameters } from './Assertions.mjs';
import { ActionRowBuilder } from '../../components/ActionRow.mjs';
import { customIdValidator } from '../../components/Assertions.mjs';
import { createComponentBuilder } from '../../components/Components.mjs';
import { normalizeArray } from '../../util/normalizeArray.mjs';

class ModalBuilder {
  constructor({ components, ...data } = {}) {
    this.components = [];
    this.data = { ...data };
    this.components = components?.map((c) => createComponentBuilder(c)) ?? [];
  }
  setTitle(title) {
    this.data.title = titleValidator.parse(title);
    return this;
  }
  setCustomId(customId) {
    this.data.custom_id = customIdValidator.parse(customId);
    return this;
  }
  addComponents(...components) {
    this.components.push(...normalizeArray(components).map((component) => component instanceof ActionRowBuilder ? component : new ActionRowBuilder(component)));
    return this;
  }
  setComponents(...components) {
    this.components.splice(0, this.components.length, ...normalizeArray(components));
    return this;
  }
  toJSON() {
    validateRequiredParameters(this.data.custom_id, this.data.title, this.components);
    return {
      ...this.data,
      components: this.components.map((component) => component.toJSON())
    };
  }
}

export { ModalBuilder };
//# sourceMappingURL=Modal.mjs.map
