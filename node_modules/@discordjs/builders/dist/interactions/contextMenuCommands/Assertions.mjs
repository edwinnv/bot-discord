import { s } from '@sapphire/shapeshift';
import { ApplicationCommandType } from 'discord-api-types/v10';
import { isValidationEnabled } from '../../util/validation.mjs';

const namePredicate = s.string.lengthGreaterThanOrEqual(1).lengthLessThanOrEqual(32).regex(/^( *[\p{L}\p{N}\p{sc=Devanagari}\p{sc=Thai}_-]+ *)+$/u).setValidationEnabled(isValidationEnabled);
const typePredicate = s.union(s.literal(ApplicationCommandType.User), s.literal(ApplicationCommandType.Message)).setValidationEnabled(isValidationEnabled);
const booleanPredicate = s.boolean;
function validateDefaultPermission(value) {
  booleanPredicate.parse(value);
}
function validateName(name) {
  namePredicate.parse(name);
}
function validateType(type) {
  typePredicate.parse(type);
}
function validateRequiredParameters(name, type) {
  validateName(name);
  validateType(type);
}
const dmPermissionPredicate = s.boolean.nullish;
function validateDMPermission(value) {
  dmPermissionPredicate.parse(value);
}
const memberPermissionPredicate = s.union(s.bigint.transform((value) => value.toString()), s.number.safeInt.transform((value) => value.toString()), s.string.regex(/^\d+$/)).nullish;
function validateDefaultMemberPermissions(permissions) {
  return memberPermissionPredicate.parse(permissions);
}

export { validateDMPermission, validateDefaultMemberPermissions, validateDefaultPermission, validateName, validateRequiredParameters, validateType };
//# sourceMappingURL=Assertions.mjs.map
