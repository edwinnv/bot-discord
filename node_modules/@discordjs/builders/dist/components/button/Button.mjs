import { ComponentType } from 'discord-api-types/v10';
import { buttonStyleValidator, urlValidator, customIdValidator, emojiValidator, disabledValidator, buttonLabelValidator, validateRequiredButtonParameters } from '../Assertions.mjs';
import { ComponentBuilder } from '../Component.mjs';

class ButtonBuilder extends ComponentBuilder {
  constructor(data) {
    super({ type: ComponentType.Button, ...data });
  }
  setStyle(style) {
    this.data.style = buttonStyleValidator.parse(style);
    return this;
  }
  setURL(url) {
    this.data.url = urlValidator.parse(url);
    return this;
  }
  setCustomId(customId) {
    this.data.custom_id = customIdValidator.parse(customId);
    return this;
  }
  setEmoji(emoji) {
    this.data.emoji = emojiValidator.parse(emoji);
    return this;
  }
  setDisabled(disabled = true) {
    this.data.disabled = disabledValidator.parse(disabled);
    return this;
  }
  setLabel(label) {
    this.data.label = buttonLabelValidator.parse(label);
    return this;
  }
  toJSON() {
    validateRequiredButtonParameters(this.data.style, this.data.label, this.data.emoji, this.data.custom_id, this.data.url);
    return {
      ...this.data
    };
  }
}

export { ButtonBuilder };
//# sourceMappingURL=Button.mjs.map
